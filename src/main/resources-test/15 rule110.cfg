; CFG for function printString
; block printString
	; predecessors=[]
		1: str
	; 11 pc
	call length(1@function,i64), strlen, [str(0@argument,u8*)]
		2: length, str
	call _, printStringLength [str(0@argument,u8*), length(1@function,i64)]
	jump @printString_ret
	; successors=[@printString_ret]

; block @printString_ret
	; predecessors=[printString]
	; successors=[]


; CFG for function printChar
; block printChar
	; predecessors=[]
		1: chr
	; 13 pc
	addrof t.1(1@function,u8*), chr(0@argument,u8)
		1: t.1
	const t.2(2@function,i64), 1
		2: t.1, t.2
	call _, printStringLength [t.1(1@function,u8*), t.2(2@function,i64)]
	jump @printChar_ret
	; successors=[@printChar_ret]

; block @printChar_ret
	; predecessors=[printChar]
	; successors=[]


; CFG for function strlen
; block strlen
	; predecessors=[]
		1: str
	; 3 pc
	const length(1@function,i64), 0
		2: length, str
	; 37:2 for *str != 0
	jump @for_1
		2: length, str
	; successors=[@for_1]

; block @for_1
	; predecessors=[strlen, @for_1_continue]
		2: length, str
	; 19 pc
	load t.3(3@function,u8), [str(0@argument,u8*)]
		3: length, str, t.3
	const t.4(4@function,u8), 0
		4: length, str, t.3, t.4
	notequals t.2(2@function,bool), t.3(3@function,u8), t.4(4@function,u8)
		3: length, str, t.2
	branch t.2(2@function,bool), false, @for_1_break
		2: length, str
	jump @for_1_body
		2: length, str
	; successors=[@for_1_break, @for_1_body]

; block @for_1_body
	; predecessors=[@for_1]
		2: length, str
	; 10 pc
	const t.5(5@function,i64), 1
		3: length, str, t.5
	add length(1@function,i64), length(1@function,i64), t.5(5@function,i64)
		2: length, str
	jump @for_1_continue
		2: length, str
	; successors=[@for_1_continue]

; block @for_1_continue
	; predecessors=[@for_1_body]
		2: length, str
	; 20 pc
	cast t.7(7@function,i64), str(0@argument,u8*)
		2: length, t.7
	const t.8(8@function,i64), 1
		3: length, t.7, t.8
	add t.6(6@function,i64), t.7(7@function,i64), t.8(8@function,i64)
		2: length, t.6
	cast str(0@argument,u8*), t.6(6@function,i64)
		2: length, str
	jump @for_1
		2: length, str
	; successors=[@for_1]

; block @for_1_break
	; predecessors=[@for_1]
		1: length
	; 4 pc
	; 40:9 return length
	ret length(1@function,i64)
	jump @strlen_ret
	; successors=[@strlen_ret]

; block @strlen_ret
	; predecessors=[@for_1_break]
	; successors=[]


; CFG for function printBoard
; block printBoard
	; predecessors=[]
	; 8 pc
	const t.1(1@function,u8), 124
		1: t.1
	call _, printChar [t.1(1@function,u8)]
	const i(0@function,u8), 0
		1: i
	; 11:2 for i < 30
	jump @for_2
		1: i
	; successors=[@for_2]

; block @for_2
	; predecessors=[printBoard, @for_2_continue]
		1: i
	; 13 pc
	const t.3(3@function,u8), 30
		2: i, t.3
	lt t.2(2@function,bool), i(0@function,u8), t.3(3@function,u8)
		2: i, t.2
	branch t.2(2@function,bool), false, @for_2_break
		1: i
	jump @no_critical_edge_9
		1: i
	; successors=[@for_2_break, @no_critical_edge_9]

; block @no_critical_edge_9
	; predecessors=[@for_2]
		1: i
	; 1 pc
	jump @for_2_body
		1: i
	; successors=[@for_2_body]

; block @for_2_body
	; predecessors=[@no_critical_edge_9]
		1: i
	; 39 pc
	; 12:3 if [...] == 0
	cast t.7(7@function,i64), i(0@function,u8)
		2: i, t.7
	cast t.8(8@function,u8*), t.7(7@function,i64)
		2: i, t.8
	addrof t.6(6@function,u8*), [board(0@global,u8*)]
		3: i, t.6, t.8
	add t.6(6@function,u8*), t.6(6@function,u8*), t.8(8@function,u8*)
		2: i, t.6
	load t.5(5@function,u8), [t.6(6@function,u8*)]
		2: i, t.5
	const t.9(9@function,u8), 0
		3: i, t.5, t.9
	equals t.4(4@function,bool), t.5(5@function,u8), t.9(9@function,u8)
		2: i, t.4
	branch t.4(4@function,bool), false, @if_3_else
		1: i
	jump @if_3_then
		1: i
	; successors=[@if_3_else, @if_3_then]

; block @if_3_then
	; predecessors=[@for_2_body]
		1: i
	; 6 pc
	const t.10(10@function,u8), 32
		2: i, t.10
	call _, printChar [t.10(10@function,u8)]
		1: i
	jump @if_3_end
		1: i
	; successors=[@if_3_end]

; block @if_3_else
	; predecessors=[@for_2_body]
		1: i
	; 6 pc
	const t.11(11@function,u8), 42
		2: i, t.11
	call _, printChar [t.11(11@function,u8)]
		1: i
	jump @if_3_end
		1: i
	; successors=[@if_3_end]

; block @if_3_end
	; predecessors=[@if_3_else, @if_3_then]
		1: i
	; 1 pc
	jump @for_2_continue
		1: i
	; successors=[@for_2_continue]

; block @for_2_continue
	; predecessors=[@if_3_end]
		1: i
	; 10 pc
	const t.12(12@function,u8), 1
		2: i, t.12
	add i(0@function,u8), i(0@function,u8), t.12(12@function,u8)
		1: i
	jump @for_2
		1: i
	; successors=[@for_2]

; block @for_2_break
	; predecessors=[@for_2]
	; 7 pc
	const t.13(13@function,u8*), [string-0]
		1: t.13
	call _, printString [t.13(13@function,u8*)]
	jump @printBoard_ret
	; successors=[@printBoard_ret]

; block @printBoard_ret
	; predecessors=[@for_2_break]
	; successors=[]


; CFG for function main
; block main
	; predecessors=[]
	; 3 pc
	; begin initialize global variables
	; end initialize global variables
	const i(0@function,u8), 0
		1: i
	; 23:2 for i < 30
	jump @for_4
		1: i
	; successors=[@for_4]

; block @for_4
	; predecessors=[main, @for_4_continue]
		1: i
	; 13 pc
	const t.5(5@function,u8), 30
		2: i, t.5
	lt t.4(4@function,bool), i(0@function,u8), t.5(5@function,u8)
		2: i, t.4
	branch t.4(4@function,bool), false, @for_4_break
		1: i
	jump @for_4_body
		1: i
	; successors=[@for_4_break, @for_4_body]

; block @for_4_body
	; predecessors=[@for_4]
		1: i
	; 29 pc
	const t.6(6@function,u8), 0
		2: i, t.6
	cast t.8(8@function,i64), i(0@function,u8)
		3: i, t.6, t.8
	cast t.9(9@function,u8*), t.8(8@function,i64)
		3: i, t.6, t.9
	addrof t.7(7@function,u8*), [board(0@global,u8*)]
		4: i, t.6, t.7, t.9
	add t.7(7@function,u8*), t.7(7@function,u8*), t.9(9@function,u8*)
		3: i, t.6, t.7
	store [t.7(7@function,u8*)], t.6(6@function,u8)
		1: i
	jump @for_4_continue
		1: i
	; successors=[@for_4_continue]

; block @for_4_continue
	; predecessors=[@for_4_body]
		1: i
	; 10 pc
	const t.10(10@function,u8), 1
		2: i, t.10
	add i(0@function,u8), i(0@function,u8), t.10(10@function,u8)
		1: i
	jump @for_4
		1: i
	; successors=[@for_4]

; block @for_4_break
	; predecessors=[@for_4]
	; 34 pc
	const t.11(11@function,u8), 1
		1: t.11
	const t.14(14@function,u8), 29
		2: t.11, t.14
	cast t.13(13@function,i64), t.14(14@function,u8)
		2: t.11, t.13
	cast t.15(15@function,u8*), t.13(13@function,i64)
		2: t.11, t.15
	addrof t.12(12@function,u8*), [board(0@global,u8*)]
		3: t.11, t.12, t.15
	add t.12(12@function,u8*), t.12(12@function,u8*), t.15(15@function,u8*)
		2: t.11, t.12
	store [t.12(12@function,u8*)], t.11(11@function,u8)
	call _, printBoard []
	const i(1@function,u8), 0
		1: i
	; 30:2 for i < 28
	jump @for_5
		1: i
	; successors=[@for_5]

; block @for_5
	; predecessors=[@for_4_break, @for_5_continue]
		1: i
	; 13 pc
	const t.17(17@function,u8), 28
		2: i, t.17
	lt t.16(16@function,bool), i(1@function,u8), t.17(17@function,u8)
		2: i, t.16
	branch t.16(16@function,bool), false, @for_5_break
		1: i
	jump @for_5_body
		1: i
	; successors=[@for_5_break, @for_5_body]

; block @for_5_body
	; predecessors=[@for_5]
		1: i
	; 65 pc
	const t.21(21@function,i64), 0
		2: i, t.21
	cast t.22(22@function,u8*), t.21(21@function,i64)
		2: i, t.22
	addrof t.20(20@function,u8*), [board(0@global,u8*)]
		3: i, t.20, t.22
	add t.20(20@function,u8*), t.20(20@function,u8*), t.22(22@function,u8*)
		2: i, t.20
	load t.19(19@function,u8), [t.20(20@function,u8*)]
		2: i, t.19
	const t.23(23@function,u8), 1
		3: i, t.19, t.23
	shiftleft t.18(18@function,u8), t.19(19@function,u8), t.23(23@function,u8)
		2: i, t.18
	const t.26(26@function,i64), 1
		3: i, t.18, t.26
	cast t.27(27@function,u8*), t.26(26@function,i64)
		3: i, t.18, t.27
	addrof t.25(25@function,u8*), [board(0@global,u8*)]
		4: i, t.18, t.25, t.27
	add t.25(25@function,u8*), t.25(25@function,u8*), t.27(27@function,u8*)
		3: i, t.18, t.25
	load t.24(24@function,u8), [t.25(25@function,u8*)]
		3: i, t.18, t.24
	or pattern(2@function,u8), t.18(18@function,u8), t.24(24@function,u8)
		2: i, pattern
	const j(3@function,u8), 1
		3: i, j, pattern
	; 32:3 for j < 29
	jump @for_6
		3: i, j, pattern
	; successors=[@for_6]

; block @for_6
	; predecessors=[@for_5_body, @for_6_continue]
		3: i, j, pattern
	; 13 pc
	const t.29(29@function,u8), 29
		4: i, j, pattern, t.29
	lt t.28(28@function,bool), j(3@function,u8), t.29(29@function,u8)
		4: i, j, pattern, t.28
	branch t.28(28@function,bool), false, @for_6_break
		3: i, j, pattern
	jump @for_6_body
		3: i, j, pattern
	; successors=[@for_6_break, @for_6_body]

; block @for_6_body
	; predecessors=[@for_6]
		3: i, j, pattern
	; 105 pc
	const t.32(32@function,u8), 1
		4: i, j, pattern, t.32
	shiftleft t.31(31@function,u8), pattern(2@function,u8), t.32(32@function,u8)
		3: i, j, t.31
	const t.33(33@function,u8), 7
		4: i, j, t.31, t.33
	and t.30(30@function,u8), t.31(31@function,u8), t.33(33@function,u8)
		3: i, j, t.30
	const t.38(38@function,u8), 1
		4: i, j, t.30, t.38
	add t.37(37@function,u8), j(3@function,u8), t.38(38@function,u8)
		4: i, j, t.30, t.37
	cast t.36(36@function,i64), t.37(37@function,u8)
		4: i, j, t.30, t.36
	cast t.39(39@function,u8*), t.36(36@function,i64)
		4: i, j, t.30, t.39
	addrof t.35(35@function,u8*), [board(0@global,u8*)]
		5: i, j, t.30, t.35, t.39
	add t.35(35@function,u8*), t.35(35@function,u8*), t.39(39@function,u8*)
		4: i, j, t.30, t.35
	load t.34(34@function,u8), [t.35(35@function,u8*)]
		4: i, j, t.30, t.34
	or pattern(2@function,u8), t.30(30@function,u8), t.34(34@function,u8)
		3: i, j, pattern
	const t.42(42@function,u8), 110
		4: i, j, pattern, t.42
	shiftright t.41(41@function,u8), t.42(42@function,u8), pattern(2@function,u8)
		4: i, j, pattern, t.41
	const t.43(43@function,u8), 1
		5: i, j, pattern, t.41, t.43
	and t.40(40@function,u8), t.41(41@function,u8), t.43(43@function,u8)
		4: i, j, pattern, t.40
	cast t.45(45@function,i64), j(3@function,u8)
		5: i, j, pattern, t.40, t.45
	cast t.46(46@function,u8*), t.45(45@function,i64)
		5: i, j, pattern, t.40, t.46
	addrof t.44(44@function,u8*), [board(0@global,u8*)]
		6: i, j, pattern, t.40, t.44, t.46
	add t.44(44@function,u8*), t.44(44@function,u8*), t.46(46@function,u8*)
		5: i, j, pattern, t.40, t.44
	store [t.44(44@function,u8*)], t.40(40@function,u8)
		3: i, j, pattern
	jump @for_6_continue
		3: i, j, pattern
	; successors=[@for_6_continue]

; block @for_6_continue
	; predecessors=[@for_6_body]
		3: i, j, pattern
	; 10 pc
	const t.47(47@function,u8), 1
		4: i, j, pattern, t.47
	add j(3@function,u8), j(3@function,u8), t.47(47@function,u8)
		3: i, j, pattern
	jump @for_6
		3: i, j, pattern
	; successors=[@for_6]

; block @for_6_break
	; predecessors=[@for_6]
		1: i
	; 2 pc
	call _, printBoard []
		1: i
	jump @for_5_continue
		1: i
	; successors=[@for_5_continue]

; block @for_5_continue
	; predecessors=[@for_6_break]
		1: i
	; 10 pc
	const t.48(48@function,u8), 1
		2: i, t.48
	add i(1@function,u8), i(1@function,u8), t.48(48@function,u8)
		1: i
	jump @for_5
		1: i
	; successors=[@for_5]

; block @for_5_break
	; predecessors=[@for_5]
	; 1 pc
	jump @main_ret
	; successors=[@main_ret]

; block @main_ret
	; predecessors=[@for_5_break]
	; successors=[]


