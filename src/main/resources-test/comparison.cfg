; CFG for function printString
; block printString
	; predecessors=[]
		1: str
	; 11 pc
	call length, strlen, [str]
		2: length, str
	call _, printStringLength [str, length]
	jump @printString_ret
	; successors=[@printString_ret]

; block @printString_ret
	; predecessors=[printString]
	; successors=[]


; CFG for function printChar
; block printChar
	; predecessors=[]
		1: chr
	; 13 pc
	addrof t.1, chr
		1: t.1
	const t.2, 1
		2: t.1, t.2
	call _, printStringLength [t.1, t.2]
	jump @printChar_ret
	; successors=[@printChar_ret]

; block @printChar_ret
	; predecessors=[printChar]
	; successors=[]


; CFG for function printUint
; block printUint
	; predecessors=[]
		1: number
	; 3 pc
	const pos, 20
		2: number, pos
	; 13:2 while true
	jump @while_1
		2: number, pos
	; successors=[@while_1]

; block @while_1
	; predecessors=[printUint, @if_2_end]
		2: number, pos
	; 90 pc
	const t.5, 1
		3: number, pos, t.5
	sub pos, pos, t.5
		2: number, pos
	const t.6, 10
		3: number, pos, t.6
	move remainder, number
		4: number, pos, remainder, t.6
	mod remainder, remainder, t.6
		3: number, pos, remainder
	const t.7, 10
		4: number, pos, remainder, t.7
	div number, number, t.7
		3: number, pos, remainder
	cast t.8(u8), remainder(i64)
		3: number, pos, t.8
	const t.9, 48
		4: number, pos, t.8, t.9
	move digit, t.8
		4: digit, number, pos, t.9
	add digit, digit, t.9
		3: digit, number, pos
	cast t.11(i64), pos(u8)
		4: digit, number, pos, t.11
	cast t.12(u8*), t.11(i64)
		4: digit, number, pos, t.12
	addrof t.10, [buffer]
		5: digit, number, pos, t.10, t.12
	add t.10, t.10, t.12
		4: digit, number, pos, t.10
	store [t.10], digit
		2: number, pos
	; 19:3 if number == 0
	const t.14, 0
		3: number, pos, t.14
	equals t.13, number, t.14
		3: number, pos, t.13
	branch t.13, false, @if_2_end
		2: number, pos
	jump @if_2_then
		2: number, pos
	; successors=[@if_2_end, @if_2_then]

; block @if_2_then
	; predecessors=[@while_1]
		1: pos
	; 45 pc
	cast t.16(i64), pos(u8)
		2: pos, t.16
	cast t.17(u8*), t.16(i64)
		2: pos, t.17
	addrof t.15, [buffer]
		3: pos, t.15, t.17
	add t.15, t.15, t.17
		2: pos, t.15
	const t.20, 20
		3: pos, t.15, t.20
	move t.19, t.20
		3: pos, t.15, t.19
	sub t.19, t.19, pos
		2: t.15, t.19
	cast t.18(i64), t.19(u8)
		2: t.15, t.18
	call _, printStringLength [t.15, t.18]
	jump @printUint_ret
	; successors=[@printUint_ret]

; block @if_2_end
	; predecessors=[@while_1]
		2: number, pos
	; 1 pc
	jump @while_1
		2: number, pos
	; successors=[@while_1]

; block @printUint_ret
	; predecessors=[@if_2_then]
	; successors=[]


; CFG for function printIntLf
; block printIntLf
	; predecessors=[]
		1: number
	; 13 pc
	; 27:2 if number < 0
	const t.2, 0
		2: number, t.2
	lt t.1, number, t.2
		2: number, t.1
	branch t.1, false, @no_critical_edge_4
		1: number
	jump @if_3_then
		1: number
	; successors=[@no_critical_edge_4, @if_3_then]

; block @if_3_then
	; predecessors=[printIntLf]
		1: number
	; 11 pc
	const t.3, 45
		2: number, t.3
	call _, printChar [t.3]
		1: number
	neg number, number
		1: number
	jump @if_3_end
		1: number
	; successors=[@if_3_end]

; block @no_critical_edge_4
	; predecessors=[printIntLf]
		1: number
	; 1 pc
	jump @if_3_end
		1: number
	; successors=[@if_3_end]

; block @if_3_end
	; predecessors=[@no_critical_edge_4, @if_3_then]
		1: number
	; 9 pc
	call _, printUint [number]
	const t.4, 10
		1: t.4
	call _, printChar [t.4]
	jump @printIntLf_ret
	; successors=[@printIntLf_ret]

; block @printIntLf_ret
	; predecessors=[@if_3_end]
	; successors=[]


; CFG for function strlen
; block strlen
	; predecessors=[]
		1: str
	; 3 pc
	const length, 0
		2: length, str
	; 37:2 for *str != 0
	jump @for_4
		2: length, str
	; successors=[@for_4]

; block @for_4
	; predecessors=[strlen, @for_4_body]
		2: length, str
	; 19 pc
	load t.3, [str]
		3: length, str, t.3
	const t.4, 0
		4: length, str, t.3, t.4
	notequals t.2, t.3, t.4
		3: length, str, t.2
	branch t.2, false, @for_4_break
		2: length, str
	jump @for_4_body
		2: length, str
	; successors=[@for_4_break, @for_4_body]

; block @for_4_body
	; predecessors=[@for_4]
		2: length, str
	; 34 pc
	const t.5, 1
		3: length, str, t.5
	add length, length, t.5
		2: length, str
	cast t.7(i64), str(u8*)
		2: length, t.7
	const t.8, 1
		3: length, t.7, t.8
	move t.6, t.7
		3: length, t.6, t.8
	add t.6, t.6, t.8
		2: length, t.6
	cast str(u8*), t.6(i64)
		2: length, str
	jump @for_4
		2: length, str
	; successors=[@for_4]

; block @for_4_break
	; predecessors=[@for_4]
		1: length
	; 4 pc
	; 40:9 return length
	ret length
	jump @strlen_ret
	; successors=[@strlen_ret]

; block @strlen_ret
	; predecessors=[@for_4_break]
	; successors=[]


; CFG for function main
; block main
	; predecessors=[]
	; 369 pc
	; begin initialize global variables
	; end initialize global variables
	const t.4, [string-0]
		1: t.4
	call _, printString [t.4]
	const a, 1
		1: a
	const b, 2
		2: a, b
	lt t.6, a, b
		3: a, b, t.6
	cast t.5(i64), t.6(bool)
		3: a, b, t.5
	call _, printIntLf [t.5]
		2: a, b
	lt t.8, b, a
		3: a, b, t.8
	cast t.7(i64), t.8(bool)
		3: a, b, t.7
	call _, printIntLf [t.7]
		2: a, b
	const t.9, [string-1]
		3: a, b, t.9
	call _, printString [t.9]
		2: a, b
	const c, 0
		3: a, b, c
	const d, 128
		4: a, b, c, d
	lt t.11, c, d
		5: a, b, c, d, t.11
	cast t.10(i64), t.11(bool)
		5: a, b, c, d, t.10
	call _, printIntLf [t.10]
		4: a, b, c, d
	lt t.13, d, c
		5: a, b, c, d, t.13
	cast t.12(i64), t.13(bool)
		5: a, b, c, d, t.12
	call _, printIntLf [t.12]
		4: a, b, c, d
	const t.14, [string-2]
		5: a, b, c, d, t.14
	call _, printString [t.14]
		4: a, b, c, d
	lteq t.16, a, b
		5: a, b, c, d, t.16
	cast t.15(i64), t.16(bool)
		5: a, b, c, d, t.15
	call _, printIntLf [t.15]
		4: a, b, c, d
	lteq t.18, b, a
		5: a, b, c, d, t.18
	cast t.17(i64), t.18(bool)
		5: a, b, c, d, t.17
	call _, printIntLf [t.17]
		4: a, b, c, d
	const t.19, [string-3]
		5: a, b, c, d, t.19
	call _, printString [t.19]
		4: a, b, c, d
	lteq t.21, c, d
		5: a, b, c, d, t.21
	cast t.20(i64), t.21(bool)
		5: a, b, c, d, t.20
	call _, printIntLf [t.20]
		4: a, b, c, d
	lteq t.23, d, c
		5: a, b, c, d, t.23
	cast t.22(i64), t.23(bool)
		5: a, b, c, d, t.22
	call _, printIntLf [t.22]
		4: a, b, c, d
	const t.24, [string-4]
		5: a, b, c, d, t.24
	call _, printString [t.24]
		4: a, b, c, d
	equals t.26, a, b
		5: a, b, c, d, t.26
	cast t.25(i64), t.26(bool)
		5: a, b, c, d, t.25
	call _, printIntLf [t.25]
		4: a, b, c, d
	equals t.28, b, a
		5: a, b, c, d, t.28
	cast t.27(i64), t.28(bool)
		5: a, b, c, d, t.27
	call _, printIntLf [t.27]
		4: a, b, c, d
	const t.29, [string-5]
		5: a, b, c, d, t.29
	call _, printString [t.29]
		4: a, b, c, d
	notequals t.31, a, b
		5: a, b, c, d, t.31
	cast t.30(i64), t.31(bool)
		5: a, b, c, d, t.30
	call _, printIntLf [t.30]
		4: a, b, c, d
	notequals t.33, b, a
		5: a, b, c, d, t.33
	cast t.32(i64), t.33(bool)
		5: a, b, c, d, t.32
	call _, printIntLf [t.32]
		4: a, b, c, d
	const t.34, [string-6]
		5: a, b, c, d, t.34
	call _, printString [t.34]
		4: a, b, c, d
	gteq t.36, a, b
		5: a, b, c, d, t.36
	cast t.35(i64), t.36(bool)
		5: a, b, c, d, t.35
	call _, printIntLf [t.35]
		4: a, b, c, d
	gteq t.38, b, a
		5: a, b, c, d, t.38
	cast t.37(i64), t.38(bool)
		5: a, b, c, d, t.37
	call _, printIntLf [t.37]
		4: a, b, c, d
	const t.39, [string-7]
		5: a, b, c, d, t.39
	call _, printString [t.39]
		4: a, b, c, d
	gteq t.41, c, d
		5: a, b, c, d, t.41
	cast t.40(i64), t.41(bool)
		5: a, b, c, d, t.40
	call _, printIntLf [t.40]
		4: a, b, c, d
	gteq t.43, d, c
		5: a, b, c, d, t.43
	cast t.42(i64), t.43(bool)
		5: a, b, c, d, t.42
	call _, printIntLf [t.42]
		4: a, b, c, d
	const t.44, [string-8]
		5: a, b, c, d, t.44
	call _, printString [t.44]
		4: a, b, c, d
	gt t.46, a, b
		5: a, b, c, d, t.46
	cast t.45(i64), t.46(bool)
		5: a, b, c, d, t.45
	call _, printIntLf [t.45]
		4: a, b, c, d
	gt t.48, b, a
		3: c, d, t.48
	cast t.47(i64), t.48(bool)
		3: c, d, t.47
	call _, printIntLf [t.47]
		2: c, d
	const t.49, [string-9]
		3: c, d, t.49
	call _, printString [t.49]
		2: c, d
	gt t.51, c, d
		3: c, d, t.51
	cast t.50(i64), t.51(bool)
		3: c, d, t.50
	call _, printIntLf [t.50]
		2: c, d
	gt t.53, d, c
		1: t.53
	cast t.52(i64), t.53(bool)
		1: t.52
	call _, printIntLf [t.52]
	jump @main_ret
	; successors=[@main_ret]

; block @main_ret
	; predecessors=[main]
	; successors=[]


