i32 __random__;
u8* text;

void printString(u8* str) {
	i64 length;

	length = strlen(str);
	printStringLength(str, length);
}

void printChar(u8 chr) {
	printStringLength(&chr, 1);
}

void printUint(i64 number) {
	u8* buffer[20];
	u8 pos;
	i64 remainder;
	u8 digit;

	pos = 20;
	while (true) {
		pos = pos - 1;
		remainder = number % 10;
		number = number / 10;
		digit = ((u8)remainder) + 48;
		buffer[(i64)pos] = digit;
		if (number == 0) {
			break;
		}
	}
	printStringLength(&buffer[(i64)pos], (i64)(20 - pos));
}

void printIntLf(i64 number) {
	if (number < 0) {
		printChar(45);
		number = -number;
	}
	printUint(number);
	printChar(10);
}

i64 strlen(u8* str) {
	i64 length;

	length = 0;
	for (; (*str) != 0; str = (u8*)(((i64)str) + 1)) {
		length = length + 1;
	}
	return length;
}

void printStringLength(u8* str, i64 length) {
}

void main() {
	u8* second;
	u8 chr;

	printString(text);
	printLength();
	second = &text[1];
	printString(second);
	chr = *text;
	printIntLf((i64)chr);
}

void printLength() {
	i16 length;
	u8* ptr;

	length = 0;
	ptr = text;
	for (; (*ptr) != 0; ptr = (u8*)(((i64)ptr) + 1)) {
		length = length + 1;
	}
	printIntLf((i64)length);
}
