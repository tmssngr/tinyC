@printString:
 Local variables
	arg 0: str
	var 1: length
	; 10 pc
	call length(1@function,i64), strlen, [str(0@argument,u8*)]
	call _, printStringLength [str(0@argument,u8*), length(1@function,i64)]
@printString_ret:

@printChar:
 Local variables
	arg 0: chr
	var 1: t.1
	var 2: t.2
	; 12 pc
	addrof t.1(1@function,u8*), chr(0@argument,u8)
	const t.2(2@function,i64), 1
	call _, printStringLength [t.1(1@function,u8*), t.2(2@function,i64)]
@printChar_ret:

@strlen:
 Local variables
	arg 0: str
	var 1: length
	var 2: t.2
	var 3: t.3
	var 4: t.4
	var 5: t.5
	var 6: t.6
	var 7: t.7
	var 8: t.8
	; 53 pc
	const length(1@function,i64), 0
	; 37:2 for *str != 0
@for_1:
	load t.3(3@function,u8), [str(0@argument,u8*)]
	const t.4(4@function,u8), 0
	notequals t.2(2@function,bool), t.3(3@function,u8), t.4(4@function,u8)
	branch t.2(2@function,bool), false, @for_1_break
	const t.5(5@function,i64), 1
	add length(1@function,i64), length(1@function,i64), t.5(5@function,i64)
@for_1_continue:
	cast t.7(7@function,i64), str(0@argument,u8*)
	const t.8(8@function,i64), 1
	add t.6(6@function,i64), t.7(7@function,i64), t.8(8@function,i64)
	cast str(0@argument,u8*), t.6(6@function,i64)
	jump @for_1
@for_1_break:
	; 40:9 return length
	ret length(1@function,i64)
	jump @strlen_ret
@strlen_ret:

@printStringLength:
	mov     rdi, rsp
	
	lea     rcx, [hStdOut]
	mov     rcx, [rcx]
	mov     rdx, [rdi+18h]
	mov     r8, [rdi+10h]
	xor     r9, r9
	push    0
	sub     rsp, 20h
	  call    [WriteFile]
	mov     rsp, rdi
	ret

@printBoard:
 Local variables
	var 0: i
	var 1: t.1
	var 2: t.2
	var 3: t.3
	var 4: t.4
	var 5: t.5
	var 6: t.6
	var 7: t.7
	var 8: t.8
	var 9: t.9
	var 10: t.10
	var 11: t.11
	var 12: t.12
	; 74 pc
	const t.1(1@function,u8), 124
	call _, printChar [t.1(1@function,u8)]
	const i(0@function,u8), 0
	; 11:2 for i < 30
@for_2:
	const t.3(3@function,u8), 30
	lt t.2(2@function,bool), i(0@function,u8), t.3(3@function,u8)
	branch t.2(2@function,bool), false, @for_2_break
	; 12:3 if [...] == 0
	cast t.6(6@function,i64), i(0@function,u8)
	array t.7(7@function,u8*), board(0@global,u8*) + t.6(6@function,i64)
	load t.5(5@function,u8), [t.7(7@function,u8*)]
	const t.8(8@function,u8), 0
	equals t.4(4@function,bool), t.5(5@function,u8), t.8(8@function,u8)
	branch t.4(4@function,bool), false, @if_3_else
	const t.9(9@function,u8), 32
	call _, printChar [t.9(9@function,u8)]
	jump @if_3_end
@if_3_else:
	const t.10(10@function,u8), 42
	call _, printChar [t.10(10@function,u8)]
@if_3_end:
@for_2_continue:
	const t.11(11@function,u8), 1
	add i(0@function,u8), i(0@function,u8), t.11(11@function,u8)
	jump @for_2
@for_2_break:
	const t.12(12@function,u8*), [string-0]
	call _, printString [t.12(12@function,u8*)]
@printBoard_ret:

@main:
 Local variables
	var 0: i
	var 1: i
	var 2: pattern
	var 3: j
	var 4: t.4
	var 5: t.5
	var 6: t.6
	var 7: t.7
	var 8: t.8
	var 9: t.9
	var 10: t.10
	var 11: t.11
	var 12: t.12
	var 13: t.13
	var 14: t.14
	var 15: t.15
	var 16: t.16
	var 17: t.17
	var 18: t.18
	var 19: t.19
	var 20: t.20
	var 21: t.21
	var 22: t.22
	var 23: t.23
	var 24: t.24
	var 25: t.25
	var 26: t.26
	var 27: t.27
	var 28: t.28
	var 29: t.29
	var 30: t.30
	var 31: t.31
	var 32: t.32
	var 33: t.33
	var 34: t.34
	var 35: t.35
	var 36: t.36
	var 37: t.37
	var 38: t.38
	var 39: t.39
	var 40: t.40
	var 41: t.41
	var 42: t.42
	; 238 pc
	const i(0@function,u8), 0
	; 23:2 for i < 30
@for_4:
	const t.5(5@function,u8), 30
	lt t.4(4@function,bool), i(0@function,u8), t.5(5@function,u8)
	branch t.4(4@function,bool), false, @for_4_break
	const t.6(6@function,u8), 0
	cast t.7(7@function,i64), i(0@function,u8)
	array t.8(8@function,u8*), board(0@global,u8*) + t.7(7@function,i64)
	store [t.8(8@function,u8*)], t.6(6@function,u8)
@for_4_continue:
	const t.9(9@function,u8), 1
	add i(0@function,u8), i(0@function,u8), t.9(9@function,u8)
	jump @for_4
@for_4_break:
	const t.10(10@function,u8), 1
	const t.12(12@function,u8), 29
	cast t.11(11@function,i64), t.12(12@function,u8)
	array t.13(13@function,u8*), board(0@global,u8*) + t.11(11@function,i64)
	store [t.13(13@function,u8*)], t.10(10@function,u8)
	call _, printBoard []
	const i(1@function,u8), 0
	; 30:2 for i < 28
@for_5:
	const t.15(15@function,u8), 28
	lt t.14(14@function,bool), i(1@function,u8), t.15(15@function,u8)
	branch t.14(14@function,bool), false, @for_5_break
	const t.18(18@function,i64), 0
	array t.19(19@function,u8*), board(0@global,u8*) + t.18(18@function,i64)
	load t.17(17@function,u8), [t.19(19@function,u8*)]
	const t.20(20@function,u8), 1
	shiftleft t.16(16@function,u8), t.17(17@function,u8), t.20(20@function,u8)
	const t.22(22@function,i64), 1
	array t.23(23@function,u8*), board(0@global,u8*) + t.22(22@function,i64)
	load t.21(21@function,u8), [t.23(23@function,u8*)]
	or pattern(2@function,u8), t.16(16@function,u8), t.21(21@function,u8)
	const j(3@function,u8), 1
	; 32:3 for j < 29
@for_6:
	const t.25(25@function,u8), 29
	lt t.24(24@function,bool), j(3@function,u8), t.25(25@function,u8)
	branch t.24(24@function,bool), false, @for_6_break
	const t.28(28@function,u8), 1
	shiftleft t.27(27@function,u8), pattern(2@function,u8), t.28(28@function,u8)
	const t.29(29@function,u8), 7
	and t.26(26@function,u8), t.27(27@function,u8), t.29(29@function,u8)
	const t.33(33@function,u8), 1
	add t.32(32@function,u8), j(3@function,u8), t.33(33@function,u8)
	cast t.31(31@function,i64), t.32(32@function,u8)
	array t.34(34@function,u8*), board(0@global,u8*) + t.31(31@function,i64)
	load t.30(30@function,u8), [t.34(34@function,u8*)]
	or pattern(2@function,u8), t.26(26@function,u8), t.30(30@function,u8)
	const t.37(37@function,u8), 110
	shiftright t.36(36@function,u8), t.37(37@function,u8), pattern(2@function,u8)
	const t.38(38@function,u8), 1
	and t.35(35@function,u8), t.36(36@function,u8), t.38(38@function,u8)
	cast t.39(39@function,i64), j(3@function,u8)
	array t.40(40@function,u8*), board(0@global,u8*) + t.39(39@function,i64)
	store [t.40(40@function,u8*)], t.35(35@function,u8)
@for_6_continue:
	const t.41(41@function,u8), 1
	add j(3@function,u8), j(3@function,u8), t.41(41@function,u8)
	jump @for_6
@for_6_break:
	call _, printBoard []
@for_5_continue:
	const t.42(42@function,u8), 1
	add i(1@function,u8), i(1@function,u8), t.42(42@function,u8)
	jump @for_5
@for_5_break:
@main_ret:

Global variables
	0: board (240)

String literals
	string lit 0 "|\n\0"
