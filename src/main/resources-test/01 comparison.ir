@main:
 Local variables
   var 0: $.0
   var 1: $.1
   var 2: $.2
   var 3: $.3
   var 4: $.4
   var 5: $.5
   var 6: $.6
   var 7: $.7
   var 8: $.8
   var 9: $.9
        ; 2:11 int lit 1
        ld r0, 1 (1)
        ; 2:15 int lit 2
        ld r1, 2 (1)
        ; 2:13 <
        cmp r2, (r0 < r1) (u8)
        cast r0 (i64), r2 (bool)
        ; 2:13 var $.0(%0)
        addrOf r1, [0@function]
        ; 2:13 assign
        store [r1], r0 (8)
        ; 2:13 read var $.0(%0)
        addrOf r0, [0@function]
        load r1, [r0] (8)
        ; 2:5 print i64
        printint r1
        ; 3:11 int lit 2
        ld r0, 2 (1)
        ; 3:15 int lit 1
        ld r1, 1 (1)
        ; 3:13 <
        cmp r2, (r0 < r1) (u8)
        cast r0 (i64), r2 (bool)
        ; 3:13 var $.1(%1)
        addrOf r1, [1@function]
        ; 3:13 assign
        store [r1], r0 (8)
        ; 3:13 read var $.1(%1)
        addrOf r0, [1@function]
        load r1, [r0] (8)
        ; 3:5 print i64
        printint r1
        ; 5:11 int lit 1
        ld r0, 1 (1)
        ; 5:16 int lit 2
        ld r1, 2 (1)
        ; 5:13 <=
        cmp r2, (r0 <= r1) (u8)
        cast r0 (i64), r2 (bool)
        ; 5:13 var $.2(%2)
        addrOf r1, [2@function]
        ; 5:13 assign
        store [r1], r0 (8)
        ; 5:13 read var $.2(%2)
        addrOf r0, [2@function]
        load r1, [r0] (8)
        ; 5:5 print i64
        printint r1
        ; 6:11 int lit 2
        ld r0, 2 (1)
        ; 6:16 int lit 1
        ld r1, 1 (1)
        ; 6:13 <=
        cmp r2, (r0 <= r1) (u8)
        cast r0 (i64), r2 (bool)
        ; 6:13 var $.3(%3)
        addrOf r1, [3@function]
        ; 6:13 assign
        store [r1], r0 (8)
        ; 6:13 read var $.3(%3)
        addrOf r0, [3@function]
        load r1, [r0] (8)
        ; 6:5 print i64
        printint r1
        ; 8:11 int lit 1
        ld r0, 1 (1)
        ; 8:16 int lit 2
        ld r1, 2 (1)
        ; 8:13 ==
        cmp r2, (r0 == r1) (u8)
        cast r0 (i64), r2 (bool)
        ; 8:13 var $.4(%4)
        addrOf r1, [4@function]
        ; 8:13 assign
        store [r1], r0 (8)
        ; 8:13 read var $.4(%4)
        addrOf r0, [4@function]
        load r1, [r0] (8)
        ; 8:5 print i64
        printint r1
        ; 10:11 int lit 1
        ld r0, 1 (1)
        ; 10:16 int lit 2
        ld r1, 2 (1)
        ; 10:13 !=
        cmp r2, (r0 != r1) (u8)
        cast r0 (i64), r2 (bool)
        ; 10:13 var $.5(%5)
        addrOf r1, [5@function]
        ; 10:13 assign
        store [r1], r0 (8)
        ; 10:13 read var $.5(%5)
        addrOf r0, [5@function]
        load r1, [r0] (8)
        ; 10:5 print i64
        printint r1
        ; 12:11 int lit 1
        ld r0, 1 (1)
        ; 12:16 int lit 2
        ld r1, 2 (1)
        ; 12:13 >=
        cmp r2, (r0 >= r1) (u8)
        cast r0 (i64), r2 (bool)
        ; 12:13 var $.6(%6)
        addrOf r1, [6@function]
        ; 12:13 assign
        store [r1], r0 (8)
        ; 12:13 read var $.6(%6)
        addrOf r0, [6@function]
        load r1, [r0] (8)
        ; 12:5 print i64
        printint r1
        ; 13:11 int lit 2
        ld r0, 2 (1)
        ; 13:16 int lit 1
        ld r1, 1 (1)
        ; 13:13 >=
        cmp r2, (r0 >= r1) (u8)
        cast r0 (i64), r2 (bool)
        ; 13:13 var $.7(%7)
        addrOf r1, [7@function]
        ; 13:13 assign
        store [r1], r0 (8)
        ; 13:13 read var $.7(%7)
        addrOf r0, [7@function]
        load r1, [r0] (8)
        ; 13:5 print i64
        printint r1
        ; 15:11 int lit 1
        ld r0, 1 (1)
        ; 15:15 int lit 2
        ld r1, 2 (1)
        ; 15:13 >
        cmp r2, (r0 > r1) (u8)
        cast r0 (i64), r2 (bool)
        ; 15:13 var $.8(%8)
        addrOf r1, [8@function]
        ; 15:13 assign
        store [r1], r0 (8)
        ; 15:13 read var $.8(%8)
        addrOf r0, [8@function]
        load r1, [r0] (8)
        ; 15:5 print i64
        printint r1
        ; 16:11 int lit 2
        ld r0, 2 (1)
        ; 16:15 int lit 1
        ld r1, 1 (1)
        ; 16:13 >
        cmp r2, (r0 > r1) (u8)
        cast r0 (i64), r2 (bool)
        ; 16:13 var $.9(%9)
        addrOf r1, [9@function]
        ; 16:13 assign
        store [r1], r0 (8)
        ; 16:13 read var $.9(%9)
        addrOf r0, [9@function]
        load r1, [r0] (8)
        ; 16:5 print i64
        printint r1
@main_ret:

