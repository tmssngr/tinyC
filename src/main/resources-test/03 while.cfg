; CFG for function printChar
; block printChar
	; predecessors=[]
		1: chr
	; 13 pc
	addrof t.1, chr
		1: t.1
	const t.2, 1
		2: t.1, t.2
	call _, printStringLength [t.1, t.2]
	jump @printChar_ret
	; successors=[@printChar_ret]

; block @printChar_ret
	; predecessors=[printChar]
	; successors=[]


; CFG for function printUint
; block printUint
	; predecessors=[]
		1: number
	; 3 pc
	const pos, 20
		2: number, pos
	; 13:2 while true
	jump @while_1
		2: number, pos
	; successors=[@while_1]

; block @while_1
	; predecessors=[printUint, @if_2_end]
		2: number, pos
	; 90 pc
	const t.5, 1
		3: number, pos, t.5
	sub pos, pos, t.5
		2: number, pos
	const t.6, 10
		3: number, pos, t.6
	move remainder, number
		4: number, pos, remainder, t.6
	mod remainder, remainder, t.6
		3: number, pos, remainder
	const t.7, 10
		4: number, pos, remainder, t.7
	div number, number, t.7
		3: number, pos, remainder
	cast t.8(u8), remainder(i64)
		3: number, pos, t.8
	const t.9, 48
		4: number, pos, t.8, t.9
	move digit, t.8
		4: digit, number, pos, t.9
	add digit, digit, t.9
		3: digit, number, pos
	cast t.11(i64), pos(u8)
		4: digit, number, pos, t.11
	cast t.12(u8*), t.11(i64)
		4: digit, number, pos, t.12
	addrof t.10, [buffer]
		5: digit, number, pos, t.10, t.12
	add t.10, t.10, t.12
		4: digit, number, pos, t.10
	store [t.10], digit
		2: number, pos
	; 19:3 if number == 0
	const t.14, 0
		3: number, pos, t.14
	equals t.13, number, t.14
		3: number, pos, t.13
	branch t.13, false, @if_2_end
		2: number, pos
	jump @if_2_then
		2: number, pos
	; successors=[@if_2_end, @if_2_then]

; block @if_2_end
	; predecessors=[@while_1]
		2: number, pos
	; 1 pc
	jump @while_1
		2: number, pos
	; successors=[@while_1]

; block @if_2_then
	; predecessors=[@while_1]
		1: pos
	; 45 pc
	cast t.16(i64), pos(u8)
		2: pos, t.16
	cast t.17(u8*), t.16(i64)
		2: pos, t.17
	addrof t.15, [buffer]
		3: pos, t.15, t.17
	add t.15, t.15, t.17
		2: pos, t.15
	const t.20, 20
		3: pos, t.15, t.20
	move t.19, t.20
		3: pos, t.15, t.19
	sub t.19, t.19, pos
		2: t.15, t.19
	cast t.18(i64), t.19(u8)
		2: t.15, t.18
	call _, printStringLength [t.15, t.18]
	jump @printUint_ret
	; successors=[@printUint_ret]

; block @printUint_ret
	; predecessors=[@if_2_then]
	; successors=[]


; CFG for function printIntLf
; block printIntLf
	; predecessors=[]
		1: number
	; 13 pc
	; 27:2 if number < 0
	const t.2, 0
		2: number, t.2
	lt t.1, number, t.2
		2: number, t.1
	branch t.1, false, @no_critical_edge_4
		1: number
	jump @if_3_then
		1: number
	; successors=[@no_critical_edge_4, @if_3_then]

; block @no_critical_edge_4
	; predecessors=[printIntLf]
		1: number
	; 1 pc
	jump @if_3_end
		1: number
	; successors=[@if_3_end]

; block @if_3_then
	; predecessors=[printIntLf]
		1: number
	; 11 pc
	const t.3, 45
		2: number, t.3
	call _, printChar [t.3]
		1: number
	neg number, number
		1: number
	jump @if_3_end
		1: number
	; successors=[@if_3_end]

; block @if_3_end
	; predecessors=[@no_critical_edge_4, @if_3_then]
		1: number
	; 9 pc
	call _, printUint [number]
	const t.4, 10
		1: t.4
	call _, printChar [t.4]
	jump @printIntLf_ret
	; successors=[@printIntLf_ret]

; block @printIntLf_ret
	; predecessors=[@if_3_end]
	; successors=[]


; CFG for function main
; block main
	; predecessors=[]
	; 3 pc
	; begin initialize global variables
	; end initialize global variables
	const i, 5
		1: i
	; 5:2 while i > 0
	jump @while_4
		1: i
	; successors=[@while_4]

; block @while_4
	; predecessors=[main, @while_4_body]
		1: i
	; 13 pc
	const t.2, 0
		2: i, t.2
	gt t.1, i, t.2
		2: i, t.1
	branch t.1, false, @while_4_break
		1: i
	jump @while_4_body
		1: i
	; successors=[@while_4_break, @while_4_body]

; block @while_4_body
	; predecessors=[@while_4]
		1: i
	; 18 pc
	cast t.3(i64), i(u8)
		2: i, t.3
	call _, printIntLf [t.3]
		1: i
	const t.4, 1
		2: i, t.4
	sub i, i, t.4
		1: i
	jump @while_4
		1: i
	; successors=[@while_4]

; block @while_4_break
	; predecessors=[@while_4]
		1: i
	; 1 pc
	jump @while_5
		1: i
	; successors=[@while_5]

; block @while_5
	; predecessors=[@while_4_break, @if_6_then]
		1: i
	; 30 pc
	cast t.5(i64), i(u8)
		2: i, t.5
	call _, printIntLf [t.5]
		1: i
	const t.6, 1
		2: i, t.6
	add i, i, t.6
		1: i
	; 13:3 if i < 5
	const t.8, 5
		2: i, t.8
	lt t.7, i, t.8
		2: i, t.7
	branch t.7, false, @if_6_end
		1: i
	jump @if_6_then
		1: i
	; successors=[@if_6_end, @if_6_then]

; block @if_6_then
	; predecessors=[@while_5]
		1: i
	; 1 pc
	jump @while_5
		1: i
	; successors=[@while_5]

; block @if_6_end
	; predecessors=[@while_5]
	; 1 pc
	jump @while_7
	; successors=[@while_7]

; block @while_7
	; predecessors=[@if_6_end]
	; 1 pc
	jump @main_ret
	; successors=[@main_ret]

; block @main_ret
	; predecessors=[@while_7]
	; successors=[]


