void printChar(u8 chr) {
	u8* $.1;
	i64 $.2;

	$.1 = &chr;
	$.2 = 1;
	printStringLength($.1, $.2);
}

void printUint(i64 number) {
	u8* buffer[20];
	u8 pos;
	i64 remainder;
	u8 digit;
	u8* $.5;
	i64 $.6;

	pos = 20;
	while (true) {
		pos = pos - 1;
		remainder = number % 10;
		number = number / 10;
		digit = ((u8)remainder) + 48;
		buffer[(i64)pos] = digit;
		if (number == 0) {
			break;
		}
	}
	$.5 = &buffer[(i64)pos];
	$.6 = (i64)(20 - pos);
	printStringLength($.5, $.6);
}

void printIntLf(i64 number) {
	u8 $.1;
	i64 $.2;
	u8 $.3;

	if (number < 0) {
		$.1 = 45;
		printChar($.1);
		number = -number;
	}
	$.2 = number;
	printUint($.2);
	$.3 = 10;
	printChar($.3);
}

void printStringLength(u8* str, i64 length) {
}

void main() {
	u8 i;
	i64 $.1;
	i64 $.2;

	i = 5;
	while (i > 0) {
		$.1 = (i64)i;
		printIntLf($.1);
		i = i - 1;
	}
	while (true) {
		$.2 = (i64)i;
		printIntLf($.2);
		i = i + 1;
		if (i < 5) {
			continue;
		}
		break;
	}
	while (true) {
		return;
	}
}
