digraph program {
	edge[fontsize="10pt"];
	subgraph fn_printString {
		BasicBlock_0_printString [label="printString",shape=box];
		BasicBlock_0_printString -> BasicBlock_0_while_1 [label="(str)"];
		BasicBlock_0_while_1 [label="while_1",shape=hexagon];
		BasicBlock_0_while_1 -> BasicBlock_0_if_2_end [label="(chr,str)"];
		BasicBlock_0_while_1 -> BasicBlock_0_if_2_then;
		BasicBlock_0_if_2_then [label="if_2_then",shape=box];
		BasicBlock_0_if_2_then -> BasicBlock_0_printString_ret;
		BasicBlock_0_if_2_end [label="if_2_end",shape=box];
		BasicBlock_0_if_2_end -> BasicBlock_0_while_1 [label="(str)"];
		BasicBlock_0_printString_ret [label="printString_ret",shape=oval,style=filled,fillcolor="#fff5ee"];
	}
	subgraph fn_printStringLength {
		BasicBlock_1_printStringLength [label="printStringLength",shape=box];
		BasicBlock_1_printStringLength -> BasicBlock_1_while_3 [label="(length,str)"];
		BasicBlock_1_while_3 [label="while_3",shape=hexagon];
		BasicBlock_1_while_3 -> BasicBlock_1_while_3_break;
		BasicBlock_1_while_3 -> BasicBlock_1_while_3_body [label="(length,str)"];
		BasicBlock_1_while_3_body [label="while_3_body",shape=box];
		BasicBlock_1_while_3_body -> BasicBlock_1_while_3 [label="(length,str)"];
		BasicBlock_1_while_3_break [label="while_3_break",shape=box];
		BasicBlock_1_while_3_break -> BasicBlock_1_printStringLength_ret;
		BasicBlock_1_printStringLength_ret [label="printStringLength_ret",shape=oval,style=filled,fillcolor="#fff5ee"];
	}
	subgraph fn_printUint {
		BasicBlock_2_printUint [label="printUint",shape=box];
		BasicBlock_2_printUint -> BasicBlock_2_while_4 [label="(number,pos)"];
		BasicBlock_2_while_4 [label="while_4",shape=hexagon];
		BasicBlock_2_while_4 -> BasicBlock_2_if_5_end [label="(number,pos)"];
		BasicBlock_2_while_4 -> BasicBlock_2_if_5_then [label="(pos)"];
		BasicBlock_2_if_5_then [label="if_5_then",shape=box];
		BasicBlock_2_if_5_then -> BasicBlock_2_printUint_ret;
		BasicBlock_2_if_5_end [label="if_5_end",shape=box];
		BasicBlock_2_if_5_end -> BasicBlock_2_while_4 [label="(number,pos)"];
		BasicBlock_2_printUint_ret [label="printUint_ret",shape=oval,style=filled,fillcolor="#fff5ee"];
	}
	subgraph fn_printIntLf {
		BasicBlock_3_printIntLf [label="printIntLf",shape=hexagon];
		BasicBlock_3_printIntLf -> BasicBlock_3_no_critical_edge_4 [label="(number)"];
		BasicBlock_3_printIntLf -> BasicBlock_3_if_6_then [label="(number)"];
		BasicBlock_3_if_6_then [label="if_6_then",shape=box];
		BasicBlock_3_if_6_then -> BasicBlock_3_if_6_end [label="(number)"];
		BasicBlock_3_no_critical_edge_4 [label="no_critical_edge_4",shape=box];
		BasicBlock_3_no_critical_edge_4 -> BasicBlock_3_if_6_end [label="(number)"];
		BasicBlock_3_if_6_end [label="if_6_end",shape=box];
		BasicBlock_3_if_6_end -> BasicBlock_3_printIntLf_ret;
		BasicBlock_3_printIntLf_ret [label="printIntLf_ret",shape=oval,style=filled,fillcolor="#fff5ee"];
	}
	subgraph fn_main {
		BasicBlock_4_main [label="main",shape=box];
		BasicBlock_4_main -> BasicBlock_4_main_ret;
		BasicBlock_4_main_ret [label="main_ret",shape=oval,style=filled,fillcolor="#fff5ee"];
	}
	subgraph fn_printLength {
		BasicBlock_5_printLength [label="printLength",shape=box];
		BasicBlock_5_printLength -> BasicBlock_5_for_7 [label="(length,ptr)"];
		BasicBlock_5_for_7 [label="for_7",shape=hexagon];
		BasicBlock_5_for_7 -> BasicBlock_5_for_7_break [label="(length)"];
		BasicBlock_5_for_7 -> BasicBlock_5_for_7_body [label="(length,ptr)"];
		BasicBlock_5_for_7_body [label="for_7_body",shape=box];
		BasicBlock_5_for_7_body -> BasicBlock_5_for_7 [label="(length,ptr)"];
		BasicBlock_5_for_7_break [label="for_7_break",shape=box];
		BasicBlock_5_for_7_break -> BasicBlock_5_printLength_ret;
		BasicBlock_5_printLength_ret [label="printLength_ret",shape=oval,style=filled,fillcolor="#fff5ee"];
	}
}
