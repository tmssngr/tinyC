digraph program {
	edge[fontsize="10pt"];
	subgraph fn_printString {
		BasicBlock_0_printString [label="printString",shape=box];
		BasicBlock_0_printString -> BasicBlock_0_while_1 [label="(str)"];
		BasicBlock_0_while_1 [label="while_1",shape=hexagon];
		BasicBlock_0_while_1 -> BasicBlock_0_if_2_end [label="(chr,str)"];
		BasicBlock_0_while_1 -> BasicBlock_0_if_2_then;
		BasicBlock_0_if_2_then [label="if_2_then",shape=box];
		BasicBlock_0_if_2_then -> BasicBlock_0_printString_ret;
		BasicBlock_0_if_2_end [label="if_2_end",shape=box];
		BasicBlock_0_if_2_end -> BasicBlock_0_while_1 [label="(str)"];
		BasicBlock_0_printString_ret [label="printString_ret",shape=oval,style=filled,fillcolor="#fff5ee"];
	}
	subgraph fn_printNibble {
		BasicBlock_1_printNibble [label="printNibble",shape=hexagon];
		BasicBlock_1_printNibble -> BasicBlock_1_no_critical_edge_4 [label="(x)"];
		BasicBlock_1_printNibble -> BasicBlock_1_if_3_then [label="(x)"];
		BasicBlock_1_if_3_then [label="if_3_then",shape=box];
		BasicBlock_1_if_3_then -> BasicBlock_1_if_3_end [label="(x)"];
		BasicBlock_1_no_critical_edge_4 [label="no_critical_edge_4",shape=box];
		BasicBlock_1_no_critical_edge_4 -> BasicBlock_1_if_3_end [label="(x)"];
		BasicBlock_1_if_3_end [label="if_3_end",shape=box];
		BasicBlock_1_if_3_end -> BasicBlock_1_printNibble_ret;
		BasicBlock_1_printNibble_ret [label="printNibble_ret",shape=oval,style=filled,fillcolor="#fff5ee"];
	}
	subgraph fn_printHex2 {
		BasicBlock_2_printHex2 [label="printHex2",shape=box];
		BasicBlock_2_printHex2 -> BasicBlock_2_printHex2_ret;
		BasicBlock_2_printHex2_ret [label="printHex2_ret",shape=oval,style=filled,fillcolor="#fff5ee"];
	}
	subgraph fn_main {
		BasicBlock_3_main [label="main",shape=box];
		BasicBlock_3_main -> BasicBlock_3_for_4 [label="(i)"];
		BasicBlock_3_for_4 [label="for_4",shape=hexagon];
		BasicBlock_3_for_4 -> BasicBlock_3_for_4_break;
		BasicBlock_3_for_4 -> BasicBlock_3_for_4_body [label="(i)"];
		BasicBlock_3_for_4_body [label="for_4_body",shape=hexagon];
		BasicBlock_3_for_4_body -> BasicBlock_3_no_critical_edge_21 [label="(i)"];
		BasicBlock_3_for_4_body -> BasicBlock_3_if_5_then [label="(i)"];
		BasicBlock_3_if_5_then [label="if_5_then",shape=box];
		BasicBlock_3_if_5_then -> BasicBlock_3_if_5_end [label="(i)"];
		BasicBlock_3_no_critical_edge_21 [label="no_critical_edge_21",shape=box];
		BasicBlock_3_no_critical_edge_21 -> BasicBlock_3_if_5_end [label="(i)"];
		BasicBlock_3_if_5_end [label="if_5_end",shape=box];
		BasicBlock_3_if_5_end -> BasicBlock_3_for_4_continue [label="(i)"];
		BasicBlock_3_for_4_continue [label="for_4_continue",shape=box];
		BasicBlock_3_for_4_continue -> BasicBlock_3_for_4 [label="(i)"];
		BasicBlock_3_for_4_break [label="for_4_break",shape=box];
		BasicBlock_3_for_4_break -> BasicBlock_3_for_6 [label="(i)"];
		BasicBlock_3_for_6 [label="for_6",shape=hexagon];
		BasicBlock_3_for_6 -> BasicBlock_3_for_6_break;
		BasicBlock_3_for_6 -> BasicBlock_3_for_6_body [label="(i)"];
		BasicBlock_3_for_6_body [label="for_6_body",shape=hexagon];
		BasicBlock_3_for_6_body -> BasicBlock_3_no_critical_edge_18 [label="(i)"];
		BasicBlock_3_for_6_body -> BasicBlock_3_if_7_then [label="(i)"];
		BasicBlock_3_if_7_then [label="if_7_then",shape=box];
		BasicBlock_3_if_7_then -> BasicBlock_3_if_7_end [label="(i)"];
		BasicBlock_3_no_critical_edge_18 [label="no_critical_edge_18",shape=box];
		BasicBlock_3_no_critical_edge_18 -> BasicBlock_3_if_7_end [label="(i)"];
		BasicBlock_3_if_7_end [label="if_7_end",shape=hexagon];
		BasicBlock_3_if_7_end -> BasicBlock_3_no_critical_edge_19 [label="(i)"];
		BasicBlock_3_if_7_end -> BasicBlock_3_if_8_then [label="(i)"];
		BasicBlock_3_if_8_then [label="if_8_then",shape=box];
		BasicBlock_3_if_8_then -> BasicBlock_3_if_8_end [label="(i)"];
		BasicBlock_3_no_critical_edge_19 [label="no_critical_edge_19",shape=box];
		BasicBlock_3_no_critical_edge_19 -> BasicBlock_3_if_8_end [label="(i)"];
		BasicBlock_3_if_8_end [label="if_8_end",shape=hexagon];
		BasicBlock_3_if_8_end -> BasicBlock_3_no_critical_edge_20 [label="(i)"];
		BasicBlock_3_if_8_end -> BasicBlock_3_if_9_then [label="(i)"];
		BasicBlock_3_if_9_then [label="if_9_then",shape=box];
		BasicBlock_3_if_9_then -> BasicBlock_3_if_9_end [label="(i)"];
		BasicBlock_3_no_critical_edge_20 [label="no_critical_edge_20",shape=box];
		BasicBlock_3_no_critical_edge_20 -> BasicBlock_3_if_9_end [label="(i)"];
		BasicBlock_3_if_9_end [label="if_9_end",shape=box];
		BasicBlock_3_if_9_end -> BasicBlock_3_for_6_continue [label="(i)"];
		BasicBlock_3_for_6_continue [label="for_6_continue",shape=box];
		BasicBlock_3_for_6_continue -> BasicBlock_3_for_6 [label="(i)"];
		BasicBlock_3_for_6_break [label="for_6_break",shape=box];
		BasicBlock_3_for_6_break -> BasicBlock_3_main_ret;
		BasicBlock_3_main_ret [label="main_ret",shape=oval,style=filled,fillcolor="#fff5ee"];
	}
}
