; CFG for function printString
; block printString
	; predecessors=[]
		1: str
	; 1 pc
	jump @while_1
		1: str
	; successors=[@while_1]

; block @while_1
	; predecessors=[printString, @if_2_end]
		1: str
	; 19 pc
	load chr, [str]
		2: chr, str
	; 4:3 if chr == 0
	const t.3, 0
		3: chr, str, t.3
	equals t.2, chr, t.3
		3: chr, str, t.2
	branch t.2, false, @if_2_end
		2: chr, str
	jump @if_2_then
		2: chr, str
	; successors=[@if_2_end, @if_2_then]

; block @if_2_then
	; predecessors=[@while_1]
	; 1 pc
	jump @printString_ret
	; successors=[@printString_ret]

; block @if_2_end
	; predecessors=[@while_1]
		2: chr, str
	; 4 pc
	call _, printChar [chr]
		1: str
	jump @while_1
		1: str
	; successors=[@while_1]

; block @printString_ret
	; predecessors=[@if_2_then]
	; successors=[]


; CFG for function printBoard
; block printBoard
	; predecessors=[]
	; 8 pc
	const t.1, 124
		1: t.1
	call _, printChar [t.1]
	const i, 0
		1: i
	; 11:2 for i < 30
	jump @for_3
		1: i
	; successors=[@for_3]

; block @for_3
	; predecessors=[printBoard, @for_3_continue]
		1: i
	; 13 pc
	const t.3, 30
		2: i, t.3
	lt t.2, i, t.3
		2: i, t.2
	branch t.2, false, @for_3_break
		1: i
	jump @for_3_body
		1: i
	; successors=[@for_3_break, @for_3_body]

; block @for_3_body
	; predecessors=[@for_3]
		1: i
	; 39 pc
	; 12:3 if [...] == 0
	cast t.7(i16), i(u8)
		2: i, t.7
	cast t.8(u8*), t.7(i16)
		2: i, t.8
	addrof t.6, [board]
		3: i, t.6, t.8
	add t.6, t.6, t.8
		2: i, t.6
	load t.5, [t.6]
		2: i, t.5
	const t.9, 0
		3: i, t.5, t.9
	equals t.4, t.5, t.9
		2: i, t.4
	branch t.4, false, @if_4_else
		1: i
	jump @if_4_then
		1: i
	; successors=[@if_4_else, @if_4_then]

; block @if_4_then
	; predecessors=[@for_3_body]
		1: i
	; 6 pc
	const t.10, 32
		2: i, t.10
	call _, printChar [t.10]
		1: i
	jump @if_4_end
		1: i
	; successors=[@if_4_end]

; block @if_4_else
	; predecessors=[@for_3_body]
		1: i
	; 6 pc
	const t.11, 42
		2: i, t.11
	call _, printChar [t.11]
		1: i
	jump @if_4_end
		1: i
	; successors=[@if_4_end]

; block @if_4_end
	; predecessors=[@if_4_else, @if_4_then]
		1: i
	; 1 pc
	jump @for_3_continue
		1: i
	; successors=[@for_3_continue]

; block @for_3_continue
	; predecessors=[@if_4_end]
		1: i
	; 10 pc
	const t.12, 1
		2: i, t.12
	add i, i, t.12
		1: i
	jump @for_3
		1: i
	; successors=[@for_3]

; block @for_3_break
	; predecessors=[@for_3]
	; 7 pc
	const t.13, [string-0]
		1: t.13
	call _, printString [t.13]
	jump @printBoard_ret
	; successors=[@printBoard_ret]

; block @printBoard_ret
	; predecessors=[@for_3_break]
	; successors=[]


; CFG for function main
; block main
	; predecessors=[]
	; 3 pc
	; begin initialize global variables
	; end initialize global variables
	const i, 0
		1: i
	; 23:2 for i < 30
	jump @for_5
		1: i
	; successors=[@for_5]

; block @for_5
	; predecessors=[main, @for_5_body]
		1: i
	; 13 pc
	const t.5, 30
		2: i, t.5
	lt t.4, i, t.5
		2: i, t.4
	branch t.4, false, @for_5_break
		1: i
	jump @for_5_body
		1: i
	; successors=[@for_5_break, @for_5_body]

; block @for_5_body
	; predecessors=[@for_5]
		1: i
	; 38 pc
	const t.6, 0
		2: i, t.6
	cast t.8(i16), i(u8)
		3: i, t.6, t.8
	cast t.9(u8*), t.8(i16)
		3: i, t.6, t.9
	addrof t.7, [board]
		4: i, t.6, t.7, t.9
	add t.7, t.7, t.9
		3: i, t.6, t.7
	store [t.7], t.6
		1: i
	const t.10, 1
		2: i, t.10
	add i, i, t.10
		1: i
	jump @for_5
		1: i
	; successors=[@for_5]

; block @for_5_break
	; predecessors=[@for_5]
	; 34 pc
	const t.11, 1
		1: t.11
	const t.14, 29
		2: t.11, t.14
	cast t.13(i16), t.14(u8)
		2: t.11, t.13
	cast t.15(u8*), t.13(i16)
		2: t.11, t.15
	addrof t.12, [board]
		3: t.11, t.12, t.15
	add t.12, t.12, t.15
		2: t.11, t.12
	store [t.12], t.11
	call _, printBoard []
	const i, 0
		1: i
	; 30:2 for i < 28
	jump @for_6
		1: i
	; successors=[@for_6]

; block @for_6
	; predecessors=[@for_5_break, @for_7_break]
		1: i
	; 13 pc
	const t.17, 28
		2: i, t.17
	lt t.16, i, t.17
		2: i, t.16
	branch t.16, false, @for_6_break
		1: i
	jump @for_6_body
		1: i
	; successors=[@for_6_break, @for_6_body]

; block @for_6_body
	; predecessors=[@for_6]
		1: i
	; 75 pc
	const t.21, 0
		2: i, t.21
	cast t.22(u8*), t.21(i16)
		2: i, t.22
	addrof t.20, [board]
		3: i, t.20, t.22
	add t.20, t.20, t.22
		2: i, t.20
	load t.19, [t.20]
		2: i, t.19
	const t.23, 1
		3: i, t.19, t.23
	move t.18, t.19
		3: i, t.18, t.23
	shiftleft t.18, t.18, t.23
		2: i, t.18
	const t.26, 1
		3: i, t.18, t.26
	cast t.27(u8*), t.26(i16)
		3: i, t.18, t.27
	addrof t.25, [board]
		4: i, t.18, t.25, t.27
	add t.25, t.25, t.27
		3: i, t.18, t.25
	load t.24, [t.25]
		3: i, t.18, t.24
	move pattern, t.18
		3: i, pattern, t.24
	or pattern, pattern, t.24
		2: i, pattern
	const j, 1
		3: i, j, pattern
	; 32:3 for j < 29
	jump @for_7
		3: i, j, pattern
	; successors=[@for_7]

; block @for_7
	; predecessors=[@for_6_body, @for_7_body]
		3: i, j, pattern
	; 13 pc
	const t.29, 29
		4: i, j, pattern, t.29
	lt t.28, j, t.29
		4: i, j, pattern, t.28
	branch t.28, false, @for_7_break
		3: i, j, pattern
	jump @for_7_body
		3: i, j, pattern
	; successors=[@for_7_break, @for_7_body]

; block @for_7_body
	; predecessors=[@for_7]
		3: i, j, pattern
	; 144 pc
	const t.32, 1
		4: i, j, pattern, t.32
	move t.31, pattern
		4: i, j, t.31, t.32
	shiftleft t.31, t.31, t.32
		3: i, j, t.31
	const t.33, 7
		4: i, j, t.31, t.33
	move t.30, t.31
		4: i, j, t.30, t.33
	and t.30, t.30, t.33
		3: i, j, t.30
	const t.38, 1
		4: i, j, t.30, t.38
	move t.37, j
		5: i, j, t.30, t.37, t.38
	add t.37, t.37, t.38
		4: i, j, t.30, t.37
	cast t.36(i16), t.37(u8)
		4: i, j, t.30, t.36
	cast t.39(u8*), t.36(i16)
		4: i, j, t.30, t.39
	addrof t.35, [board]
		5: i, j, t.30, t.35, t.39
	add t.35, t.35, t.39
		4: i, j, t.30, t.35
	load t.34, [t.35]
		4: i, j, t.30, t.34
	move pattern, t.30
		4: i, j, pattern, t.34
	or pattern, pattern, t.34
		3: i, j, pattern
	const t.42, 110
		4: i, j, pattern, t.42
	move t.41, t.42
		4: i, j, pattern, t.41
	shiftright t.41, t.41, pattern
		4: i, j, pattern, t.41
	const t.43, 1
		5: i, j, pattern, t.41, t.43
	move t.40, t.41
		5: i, j, pattern, t.40, t.43
	and t.40, t.40, t.43
		4: i, j, pattern, t.40
	cast t.45(i16), j(u8)
		5: i, j, pattern, t.40, t.45
	cast t.46(u8*), t.45(i16)
		5: i, j, pattern, t.40, t.46
	addrof t.44, [board]
		6: i, j, pattern, t.40, t.44, t.46
	add t.44, t.44, t.46
		5: i, j, pattern, t.40, t.44
	store [t.44], t.40
		3: i, j, pattern
	const t.47, 1
		4: i, j, pattern, t.47
	add j, j, t.47
		3: i, j, pattern
	jump @for_7
		3: i, j, pattern
	; successors=[@for_7]

; block @for_7_break
	; predecessors=[@for_7]
		1: i
	; 11 pc
	call _, printBoard []
		1: i
	const t.48, 1
		2: i, t.48
	add i, i, t.48
		1: i
	jump @for_6
		1: i
	; successors=[@for_6]

; block @for_6_break
	; predecessors=[@for_6]
	; 1 pc
	jump @main_ret
	; successors=[@main_ret]

; block @main_ret
	; predecessors=[@for_6_break]
	; successors=[]


