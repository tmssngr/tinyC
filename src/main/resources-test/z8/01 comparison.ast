i32 __random__;

void printString(u8* str) {
	u8 chr;

	while (true) {
		chr = *str;
		if (chr == 0) {
			break;
		}
		printChar(chr);
	}
}

void printStringLength(u8* str, u8 length) {
	u8 chr;

	while (length > 0) {
		chr = *str;
		printChar(chr);
		length = length - 1;
	}
}

void printUint(i16 number) {
	u8* buffer[20];
	u8 pos;
	i64 remainder;
	u8 digit;

	pos = 20;
	while (true) {
		pos = pos - 1;
		remainder = (i64)(number % 10);
		number = number / 10;
		digit = ((u8)remainder) + 48;
		buffer[(i16)pos] = digit;
		if (number == 0) {
			break;
		}
	}
	printStringLength(&buffer[(i16)pos], 20 - pos);
}

void printIntLf(i16 number) {
	if (number < 0) {
		printChar(45);
		number = -number;
	}
	printUint(number);
	printChar(10);
}

void printChar(u8 chr) {
}

void main() {
	i16 a;
	i16 b;
	u8 c;
	u8 d;

	printString("< (signed)\n");
	a = 1;
	b = 2;
	printIntLf((i16)(a < b));
	printIntLf((i16)(b < a));
	printString("< (unsigned)\n");
	c = 0;
	d = 128;
	printIntLf((i16)(c < d));
	printIntLf((i16)(d < c));
	printString("<= (signed)\n");
	printIntLf((i16)(a <= b));
	printIntLf((i16)(b <= a));
	printString("<= (unsigned)\n");
	printIntLf((i16)(c <= d));
	printIntLf((i16)(d <= c));
	printString("==\n");
	printIntLf((i16)(a == b));
	printIntLf((i16)(b == a));
	printString("!=\n");
	printIntLf((i16)(a != b));
	printIntLf((i16)(b != a));
	printString(">= (signed)\n");
	printIntLf((i16)(a >= b));
	printIntLf((i16)(b >= a));
	printString(">= (unsigned)\n");
	printIntLf((i16)(c >= d));
	printIntLf((i16)(d >= c));
	printString("> (signed)\n");
	printIntLf((i16)(a > b));
	printIntLf((i16)(b > a));
	printString("> (unsigned)\n");
	printIntLf((i16)(c > d));
	printIntLf((i16)(d > c));
}
