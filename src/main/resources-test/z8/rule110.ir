@printString:
 Local variables
	arg 0: str (u8*/8)
	var 1: chr (u8/1)
	var 2: t.2 (bool/1)
	var 3: t.3 (u8/1)
	; 23 pc
	; 2:2 while true
@while_1:
	load chr, [str]
	; 4:3 if chr == 0
	const t.3, 0
	equals t.2, chr, t.3
	branch t.2, false, @if_2_end
	jump @while_1_break
@if_2_end:
	call _, printChar [chr]
	jump @while_1
@while_1_break:
@printString_ret:

@printBoard:
 Local variables
	var 0: i (u8/1)
	var 1: t.1 (u8/1)
	var 2: t.2 (bool/1)
	var 3: t.3 (u8/1)
	var 4: t.4 (bool/1)
	var 5: t.5 (u8/1)
	var 6: t.6 (u8*/8)
	var 7: t.7 (i16/2)
	var 8: t.8 (u8*/8)
	var 9: t.9 (u8/1)
	var 10: t.10 (u8/1)
	var 11: t.11 (u8/1)
	var 12: t.12 (u8/1)
	var 13: t.13 (u8*/8)
	; 84 pc
	const t.1, 124
	call _, printChar [t.1]
	const i, 0
	; 11:2 for i < 30
@for_3:
	const t.3, 30
	lt t.2, i, t.3
	branch t.2, false, @for_3_break
	; 12:3 if [...] == 0
	cast t.7(i16), i(u8)
	cast t.8(u8*), t.7(i16)
	addrof t.6, [board]
	add t.6, t.6, t.8
	load t.5, [t.6]
	const t.9, 0
	equals t.4, t.5, t.9
	branch t.4, false, @if_4_else
	const t.10, 32
	call _, printChar [t.10]
	jump @if_4_end
@if_4_else:
	const t.11, 42
	call _, printChar [t.11]
@if_4_end:
@for_3_continue:
	const t.12, 1
	add i, i, t.12
	jump @for_3
@for_3_break:
	const t.13, [string-0]
	call _, printString [t.13]
@printBoard_ret:

@main:
 Local variables
	var 0: i (u8/1)
	var 1: i (u8/1)
	var 2: pattern (u8/1)
	var 3: j (u8/1)
	var 4: t.4 (bool/1)
	var 5: t.5 (u8/1)
	var 6: t.6 (u8/1)
	var 7: t.7 (u8*/8)
	var 8: t.8 (i16/2)
	var 9: t.9 (u8*/8)
	var 10: t.10 (u8/1)
	var 11: t.11 (u8/1)
	var 12: t.12 (u8*/8)
	var 13: t.13 (i16/2)
	var 14: t.14 (u8/1)
	var 15: t.15 (u8*/8)
	var 16: t.16 (bool/1)
	var 17: t.17 (u8/1)
	var 18: t.18 (u8/1)
	var 19: t.19 (u8/1)
	var 20: t.20 (u8*/8)
	var 21: t.21 (i16/2)
	var 22: t.22 (u8*/8)
	var 23: t.23 (u8/1)
	var 24: t.24 (u8/1)
	var 25: t.25 (u8*/8)
	var 26: t.26 (i16/2)
	var 27: t.27 (u8*/8)
	var 28: t.28 (bool/1)
	var 29: t.29 (u8/1)
	var 30: t.30 (u8/1)
	var 31: t.31 (u8/1)
	var 32: t.32 (u8/1)
	var 33: t.33 (u8/1)
	var 34: t.34 (u8/1)
	var 35: t.35 (u8*/8)
	var 36: t.36 (i16/2)
	var 37: t.37 (u8/1)
	var 38: t.38 (u8/1)
	var 39: t.39 (u8*/8)
	var 40: t.40 (u8/1)
	var 41: t.41 (u8/1)
	var 42: t.42 (u8/1)
	var 43: t.43 (u8/1)
	var 44: t.44 (u8*/8)
	var 45: t.45 (i16/2)
	var 46: t.46 (u8*/8)
	var 47: t.47 (u8/1)
	var 48: t.48 (u8/1)
	; 338 pc
	; begin initialize global variables
	; end initialize global variables
	const i, 0
	; 23:2 for i < 30
@for_5:
	const t.5, 30
	lt t.4, i, t.5
	branch t.4, false, @for_5_break
	const t.6, 0
	cast t.8(i16), i(u8)
	cast t.9(u8*), t.8(i16)
	addrof t.7, [board]
	add t.7, t.7, t.9
	store [t.7], t.6
@for_5_continue:
	const t.10, 1
	add i, i, t.10
	jump @for_5
@for_5_break:
	const t.11, 1
	const t.14, 29
	cast t.13(i16), t.14(u8)
	cast t.15(u8*), t.13(i16)
	addrof t.12, [board]
	add t.12, t.12, t.15
	store [t.12], t.11
	call _, printBoard []
	const i, 0
	; 30:2 for i < 28
@for_6:
	const t.17, 28
	lt t.16, i, t.17
	branch t.16, false, @for_6_break
	const t.21, 0
	cast t.22(u8*), t.21(i16)
	addrof t.20, [board]
	add t.20, t.20, t.22
	load t.19, [t.20]
	const t.23, 1
	move t.18, t.19
	shiftleft t.18, t.18, t.23
	const t.26, 1
	cast t.27(u8*), t.26(i16)
	addrof t.25, [board]
	add t.25, t.25, t.27
	load t.24, [t.25]
	move pattern, t.18
	or pattern, pattern, t.24
	const j, 1
	; 32:3 for j < 29
@for_7:
	const t.29, 29
	lt t.28, j, t.29
	branch t.28, false, @for_7_break
	const t.32, 1
	move t.31, pattern
	shiftleft t.31, t.31, t.32
	const t.33, 7
	move t.30, t.31
	and t.30, t.30, t.33
	const t.38, 1
	move t.37, j
	add t.37, t.37, t.38
	cast t.36(i16), t.37(u8)
	cast t.39(u8*), t.36(i16)
	addrof t.35, [board]
	add t.35, t.35, t.39
	load t.34, [t.35]
	move pattern, t.30
	or pattern, pattern, t.34
	const t.42, 110
	move t.41, t.42
	shiftright t.41, t.41, pattern
	const t.43, 1
	move t.40, t.41
	and t.40, t.40, t.43
	cast t.45(i16), j(u8)
	cast t.46(u8*), t.45(i16)
	addrof t.44, [board]
	add t.44, t.44, t.46
	store [t.44], t.40
@for_7_continue:
	const t.47, 1
	add j, j, t.47
	jump @for_7
@for_7_break:
	call _, printBoard []
@for_6_continue:
	const t.48, 1
	add i, i, t.48
	jump @for_6
@for_6_break:
@main_ret:

@printChar:
	ld   r0, SPH
	ld   r1, SPL
	add  r1, 3
	adc  r0, 0
	ldc  r1, @rr0
	ld   %15, r1
	jp   %0818

Global variables
	0: board[] (u8*/240)

String literals
	string lit 0 "|\n\0"
