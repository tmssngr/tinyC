@printString:
 Local variables
	arg 0: str (u8*/8)
	; 8 pc
	move r5, r1
	; 2:2 while true
	jump @while_1
@if_2_end:
	move r1, r6
	call _, printChar [r1]
@while_1:
	load r6, [r5]
	; 4:3 if chr == 0
	const r0, 0
	equals r0, r6, r0
	branch r0, false, @if_2_end

@printNibble:
 Local variables
	arg 0: x (u8/1)
	; 6 pc
	const r5, 15
	and r1, r1, r5
	; 5:2 if x > 9
	const r5, 9
	gt r5, r1, r5
	branch r5, false, @if_3_end
	const r5, 7
	add r1, r1, r5
@if_3_end:
	const r5, 48
	add r1, r1, r5
	call _, printChar [r1]

@printHex2:
 Local variables
	arg 0: x (u8/1)
	; 6 pc
	move r5, r1
	const r6, 4
	move r1, r5
	shiftright r1, r1, r6
	call _, printNibble [r1]
	move r1, r5
	call _, printNibble [r1]

@main:
	; 36 pc
	; begin initialize global variables
	; end initialize global variables
	const r1, [string-0]
	call _, printString [r1]
	const r5, 0
	; 19:2 for i < 16
	jump @for_4
@for_4_body:
	; 20:3 if i & 7 == 0
	const r6, 7
	move r0, r5
	and r0, r0, r6
	const r6, 0
	equals r6, r0, r6
	branch r6, false, @if_5_end
	const r1, 32
	call _, printChar [r1]
@if_5_end:
	move r1, r5
	call _, printNibble [r1]
	const r6, 1
	add r5, r5, r6
@for_4:
	const r6, 16
	lt r6, r5, r6
	branch r6, true, @for_4_body
	const r1, 10
	call _, printChar [r1]
	const r5, 32
	; 27:2 for i < 128
	jump @for_6
@for_6_body:
	; 28:3 if i & 15 == 0
	const r6, 15
	move r0, r5
	and r0, r0, r6
	const r6, 0
	equals r6, r0, r6
	branch r6, false, @if_7_end
	move r1, r5
	call _, printHex2 [r1]
@if_7_end:
	; 31:3 if i & 7 == 0
	const r6, 7
	move r0, r5
	and r0, r0, r6
	const r6, 0
	equals r6, r0, r6
	branch r6, false, @if_8_end
	const r1, 32
	call _, printChar [r1]
@if_8_end:
	move r1, r5
	call _, printChar [r1]
	; 35:3 if i & 15 == 15
	const r6, 15
	move r0, r5
	and r0, r0, r6
	const r6, 15
	equals r6, r0, r6
	branch r6, false, @for_6_continue
	const r1, 10
	call _, printChar [r1]
@for_6_continue:
	const r0, 1
	add r5, r5, r0
@for_6:
	const r0, 128
	lt r0, r5, r0
	branch r0, true, @for_6_body

@printChar:
	ld   r0, SPH
	ld   r1, SPL
	add  r1, 3
	adc  r0, 0
	ldc  r1, @rr0
	ld   %15, r1
	jp   %0818

String literals
	string lit 0 " x\0"
