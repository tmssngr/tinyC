@main:
 Local variables
   0: i
   1: $.1
        ; 2:9 int lit 5
        ld r0, 5 (1)
        ; 2:2 var i(%0)
        addrOf r1, [0@function]
        ; 2:2 assign
        store [r1], r0 (1)
        ; 3:2 while i > 0
@while_1:
        ; 3:9 read var i(%0)
        addrOf r0, [0@function]
        load r1, [r0] (1)
        ; 3:13 int lit 0
        ld r0, 0 (1)
        ; 3:11 >
        cmp r2, (r1 > r0) (u8)
        branch-false r2, @while_1_end
        ; while body
        ; 4:9 read var i(%0)
        addrOf r0, [0@function]
        load r1, [r0] (1)
        cast r0 (i64), r1 (u8)
        ; 4:9 var $.1(%1)
        addrOf r1, [1@function]
        ; 4:9 assign
        store [r1], r0 (8)
        ; 4:9 read var $.1(%1)
        addrOf r0, [1@function]
        load r1, [r0] (8)
        ; 4:3 print i64
        printint r1
        ; 5:7 read var i(%0)
        addrOf r0, [0@function]
        load r1, [r0] (1)
        ; 5:11 int lit 1
        ld r0, 1 (1)
        ; 5:9 sub
        binary- r1, r0 (1)
        ; 5:3 var i(%0)
        addrOf r0, [0@function]
        ; 5:5 assign
        store [r0], r1 (1)
        jmp @while_1
@while_1_end:
        ; 8:2 while true
@while_2:
        ; 8:9 bool lit true
        ld r0, 1 (1)
        branch-false r0, @while_2_end
        ; while body
        ; return
        jmp @main_ret
        jmp @while_2
@while_2_end:
@main_ret:

