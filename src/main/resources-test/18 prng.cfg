; CFG for function printChar
; block printChar
	; predecessors=[]
		1: chr
	; 13 pc
	addrof t.1(1@function,u8*), chr(0@argument,u8)
		1: t.1
	const t.2(2@function,i64), 1
		2: t.1, t.2
	call _, printStringLength [t.1(1@function,u8*), t.2(2@function,i64)]
	jump @printChar_ret
	; successors=[@printChar_ret]

; block @printChar_ret
	; predecessors=[printChar]
	; successors=[]


; CFG for function printUint
; block printUint
	; predecessors=[]
		1: number
	; 3 pc
	const pos(2@function,u8), 20
		2: number, pos
	; 13:2 while true
	jump @while_1
		2: number, pos
	; successors=[@while_1]

; block @while_1
	; predecessors=[printUint, @if_2_end]
		2: number, pos
	; 80 pc
	const t.5(5@function,u8), 1
		3: number, pos, t.5
	sub pos(2@function,u8), pos(2@function,u8), t.5(5@function,u8)
		2: number, pos
	const t.6(6@function,i64), 10
		3: number, pos, t.6
	mod remainder(3@function,i64), number(0@argument,i64), t.6(6@function,i64)
		3: number, pos, remainder
	const t.7(7@function,i64), 10
		4: number, pos, remainder, t.7
	div number(0@argument,i64), number(0@argument,i64), t.7(7@function,i64)
		3: number, pos, remainder
	cast t.8(8@function,u8), remainder(3@function,i64)
		3: number, pos, t.8
	const t.9(9@function,u8), 48
		4: number, pos, t.8, t.9
	add digit(4@function,u8), t.8(8@function,u8), t.9(9@function,u8)
		3: digit, number, pos
	cast t.11(11@function,i64), pos(2@function,u8)
		4: digit, number, pos, t.11
	cast t.12(12@function,u8*), t.11(11@function,i64)
		4: digit, number, pos, t.12
	addrof t.10(10@function,u8*), [buffer(1@function,u8*)]
		5: digit, number, pos, t.10, t.12
	add t.10(10@function,u8*), t.10(10@function,u8*), t.12(12@function,u8*)
		4: digit, number, pos, t.10
	store [t.10(10@function,u8*)], digit(4@function,u8)
		2: number, pos
	; 19:3 if number == 0
	const t.14(14@function,i64), 0
		3: number, pos, t.14
	equals t.13(13@function,bool), number(0@argument,i64), t.14(14@function,i64)
		3: number, pos, t.13
	branch t.13(13@function,bool), false, @if_2_end
		2: number, pos
	jump @if_2_then
		2: number, pos
	; successors=[@if_2_end, @if_2_then]

; block @if_2_then
	; predecessors=[@while_1]
		1: pos
	; 1 pc
	jump @while_1_break
		1: pos
	; successors=[@while_1_break]

; block @while_1_break
	; predecessors=[@if_2_then]
		1: pos
	; 40 pc
	cast t.16(16@function,i64), pos(2@function,u8)
		2: pos, t.16
	cast t.17(17@function,u8*), t.16(16@function,i64)
		2: pos, t.17
	addrof t.15(15@function,u8*), [buffer(1@function,u8*)]
		3: pos, t.15, t.17
	add t.15(15@function,u8*), t.15(15@function,u8*), t.17(17@function,u8*)
		2: pos, t.15
	const t.20(20@function,u8), 20
		3: pos, t.15, t.20
	sub t.19(19@function,u8), t.20(20@function,u8), pos(2@function,u8)
		2: t.15, t.19
	cast t.18(18@function,i64), t.19(19@function,u8)
		2: t.15, t.18
	call _, printStringLength [t.15(15@function,u8*), t.18(18@function,i64)]
	jump @printUint_ret
	; successors=[@printUint_ret]

; block @if_2_end
	; predecessors=[@while_1]
		2: number, pos
	; 1 pc
	jump @while_1
		2: number, pos
	; successors=[@while_1]

; block @printUint_ret
	; predecessors=[@while_1_break]
	; successors=[]


; CFG for function printIntLf
; block printIntLf
	; predecessors=[]
		1: number
	; 13 pc
	; 27:2 if number < 0
	const t.2(2@function,i64), 0
		2: number, t.2
	lt t.1(1@function,bool), number(0@argument,i64), t.2(2@function,i64)
		2: number, t.1
	branch t.1(1@function,bool), false, @no_critical_edge_4
		1: number
	jump @if_3_then
		1: number
	; successors=[@no_critical_edge_4, @if_3_then]

; block @if_3_then
	; predecessors=[printIntLf]
		1: number
	; 11 pc
	const t.3(3@function,u8), 45
		2: number, t.3
	call _, printChar [t.3(3@function,u8)]
		1: number
	neg number(0@argument,i64), number(0@argument,i64)
		1: number
	jump @if_3_end
		1: number
	; successors=[@if_3_end]

; block @no_critical_edge_4
	; predecessors=[printIntLf]
		1: number
	; 1 pc
	jump @if_3_end
		1: number
	; successors=[@if_3_end]

; block @if_3_end
	; predecessors=[@no_critical_edge_4, @if_3_then]
		1: number
	; 9 pc
	call _, printUint [number(0@argument,i64)]
	const t.4(4@function,u8), 10
		1: t.4
	call _, printChar [t.4(4@function,u8)]
	jump @printIntLf_ret
	; successors=[@printIntLf_ret]

; block @printIntLf_ret
	; predecessors=[@if_3_end]
	; successors=[]


; CFG for function initRandom
; block initRandom
	; predecessors=[]
		1: salt
	; 6 pc
	copy __random__(0@global,i32), salt(0@argument,i32)
	jump @initRandom_ret
	; successors=[@initRandom_ret]

; block @initRandom_ret
	; predecessors=[initRandom]
	; successors=[]


; CFG for function random
; block random
	; predecessors=[]
		1: __random__
	; 111 pc
	copy r(0@function,i32), __random__(0@global,i32)
		1: r
	const t.6(6@function,i32), 524287
		2: r, t.6
	and t.5(5@function,i32), r(0@function,i32), t.6(6@function,i32)
		2: r, t.5
	const t.7(7@function,i32), 48271
		3: r, t.5, t.7
	mul b(1@function,i32), t.5(5@function,i32), t.7(7@function,i32)
		2: b, r
	const t.9(9@function,i32), 15
		3: b, r, t.9
	shiftright t.8(8@function,i32), r(0@function,i32), t.9(9@function,i32)
		2: b, t.8
	const t.10(10@function,i32), 48271
		3: b, t.10, t.8
	mul c(2@function,i32), t.8(8@function,i32), t.10(10@function,i32)
		2: b, c
	const t.12(12@function,i32), 65535
		3: b, c, t.12
	and t.11(11@function,i32), c(2@function,i32), t.12(12@function,i32)
		3: b, c, t.11
	const t.13(13@function,i32), 15
		4: b, c, t.11, t.13
	shiftleft d(3@function,i32), t.11(11@function,i32), t.13(13@function,i32)
		3: b, c, d
	const t.16(16@function,i32), 16
		4: b, c, d, t.16
	shiftright t.15(15@function,i32), c(2@function,i32), t.16(16@function,i32)
		3: b, d, t.15
	add t.14(14@function,i32), t.15(15@function,i32), b(1@function,i32)
		2: d, t.14
	add e(4@function,i32), t.14(14@function,i32), d(3@function,i32)
		1: e
	const t.18(18@function,i32), 2147483647
		2: e, t.18
	and t.17(17@function,i32), e(4@function,i32), t.18(18@function,i32)
		2: e, t.17
	const t.20(20@function,i32), 31
		3: e, t.17, t.20
	shiftright t.19(19@function,i32), e(4@function,i32), t.20(20@function,i32)
		2: t.17, t.19
	add __random__(0@global,i32), t.17(17@function,i32), t.19(19@function,i32)
		1: __random__
	; 127:9 return __random__
	ret __random__(0@global,i32)
	jump @random_ret
	; successors=[@random_ret]

; block @random_ret
	; predecessors=[random]
	; successors=[]


; CFG for function randomU8
; block randomU8
	; predecessors=[]
	; 12 pc
	; 131:10 return (u8)
	call t.1(1@function,i32), random, []
		1: t.1
	cast t.0(0@function,u8), t.1(1@function,i32)
		1: t.0
	ret t.0(0@function,u8)
	jump @randomU8_ret
	; successors=[@randomU8_ret]

; block @randomU8_ret
	; predecessors=[randomU8]
	; successors=[]


; CFG for function main
; block main
	; predecessors=[]
	; 10 pc
	; begin initialize global variables
	const __random__(0@global,i32), 0
	; end initialize global variables
	const t.2(2@function,i32), 7439742
		1: t.2
	call _, initRandom [t.2(2@function,i32)]
	const i(0@function,u8), 0
		1: i
	; 5:2 for i < 50
	jump @for_4
		1: i
	; successors=[@for_4]

; block @for_4
	; predecessors=[main, @for_4_continue]
		1: i
	; 13 pc
	const t.4(4@function,u8), 50
		2: i, t.4
	lt t.3(3@function,bool), i(0@function,u8), t.4(4@function,u8)
		2: i, t.3
	branch t.3(3@function,bool), false, @for_4_break
		1: i
	jump @for_4_body
		1: i
	; successors=[@for_4_break, @for_4_body]

; block @for_4_body
	; predecessors=[@for_4]
		1: i
	; 12 pc
	call r(1@function,u8), randomU8, []
		2: i, r
	cast t.5(5@function,i64), r(1@function,u8)
		2: i, t.5
	call _, printIntLf [t.5(5@function,i64)]
		1: i
	jump @for_4_continue
		1: i
	; successors=[@for_4_continue]

; block @for_4_continue
	; predecessors=[@for_4_body]
		1: i
	; 10 pc
	const t.6(6@function,u8), 1
		2: i, t.6
	add i(0@function,u8), i(0@function,u8), t.6(6@function,u8)
		1: i
	jump @for_4
		1: i
	; successors=[@for_4]

; block @for_4_break
	; predecessors=[@for_4]
	; 1 pc
	jump @main_ret
	; successors=[@main_ret]

; block @main_ret
	; predecessors=[@for_4_break]
	; successors=[]


