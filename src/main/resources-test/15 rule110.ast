u8* board[30];

void printString(u8* str) {
	i64 length;

	length = strlen(str);
	printStringLength(str, length);
}

void printChar(u8 chr) {
	printStringLength(&chr, 1);
}

i64 strlen(u8* str) {
	i64 length;

	length = 0;
	for (; (*str) != 0; str = (u8*)(((i64)str) + 1)) {
		length = length + 1;
	}
	return length;
}

void printStringLength(u8* str, i64 length) {
}

void printBoard() {
	u8 i;

	printChar(124);
	i = 0;
	for (; i < 30; i = i + 1) {
		if (board[(i64)i] == 0) {
			printChar(32);
		}
		else {
			printChar(42);
		}
	}
	printString("|\n");
}

void main() {
	u8 i;
	u8 i;
	u8 pattern;
	u8 j;

	i = 0;
	for (; i < 30; i = i + 1) {
		board[(i64)i] = 0;
	}
	board[(i64)(30 - 1)] = 1;
	printBoard();
	i = 0;
	for (; i < (30 - 2); i = i + 1) {
		pattern = (board[0] << 1) | board[1];
		j = 1;
		for (; j < (30 - 1); j = j + 1) {
			pattern = ((pattern << 1) & 7) | board[(i64)(j + 1)];
			board[(i64)j] = (110 >> pattern) & 1;
		}
		printBoard();
	}
}
