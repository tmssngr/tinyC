i32 __random__;

void printChar(u8 chr) {
	printStringLength(&chr, 1);
}

void printUint(i64 number) {
	u8* buffer[20];
	u8 pos;
	i64 remainder;
	u8 digit;

	pos = 20;
	while (true) {
		pos = pos - 1;
		remainder = number % 10;
		number = number / 10;
		digit = ((u8)remainder) + 48;
		buffer[(i64)pos] = digit;
		if (number == 0) {
			break;
		}
	}
	printStringLength(&buffer[(i64)pos], (i64)(20 - pos));
}

void printIntLf(i64 number) {
	if (number < 0) {
		printChar(45);
		number = -number;
	}
	printUint(number);
	printChar(10);
}

void printStringLength(u8* str, i64 length) {
}

void initRandom(i32 salt) {
	__random__ = salt;
}

i32 random() {
	i32 r;
	i32 b;
	i32 c;
	i32 d;
	i32 e;

	r = __random__;
	b = (r & 524287) * 48271;
	c = (r >> 15) * 48271;
	d = (c & 65535) << 15;
	e = ((c >> 16) + b) + d;
	__random__ = (e & 2147483647) + (e >> 31);
	return __random__;
}

u8 randomU8() {
	return (u8)(random());
}

void main() {
	u8 i;
	u8 r;

	initRandom(7439742);
	i = 0;
	for (; i < 50; i = i + 1) {
		r = randomU8();
		printIntLf((i64)r);
	}
}
