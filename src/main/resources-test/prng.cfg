; CFG for function printChar
; block printChar
	; predecessors=[]
		1: chr
	; 13 pc
	addrof t.1, chr
		1: t.1
	const t.2, 1
		2: t.1, t.2
	call _, printStringLength [t.1, t.2]
	jump @printChar_ret
	; successors=[@printChar_ret]

; block @printChar_ret
	; predecessors=[printChar]
	; successors=[]


; CFG for function printUint
; block printUint
	; predecessors=[]
		1: number
	; 3 pc
	const pos, 20
		2: number, pos
	; 13:2 while true
	jump @while_1
		2: number, pos
	; successors=[@while_1]

; block @while_1
	; predecessors=[printUint, @if_2_end]
		2: number, pos
	; 90 pc
	const t.5, 1
		3: number, pos, t.5
	sub pos, pos, t.5
		2: number, pos
	const t.6, 10
		3: number, pos, t.6
	move remainder, number
		4: number, pos, remainder, t.6
	mod remainder, remainder, t.6
		3: number, pos, remainder
	const t.7, 10
		4: number, pos, remainder, t.7
	div number, number, t.7
		3: number, pos, remainder
	cast t.8(u8), remainder(i64)
		3: number, pos, t.8
	const t.9, 48
		4: number, pos, t.8, t.9
	move digit, t.8
		4: digit, number, pos, t.9
	add digit, digit, t.9
		3: digit, number, pos
	cast t.11(i64), pos(u8)
		4: digit, number, pos, t.11
	cast t.12(u8*), t.11(i64)
		4: digit, number, pos, t.12
	addrof t.10, [buffer]
		5: digit, number, pos, t.10, t.12
	add t.10, t.10, t.12
		4: digit, number, pos, t.10
	store [t.10], digit
		2: number, pos
	; 19:3 if number == 0
	const t.14, 0
		3: number, pos, t.14
	equals t.13, number, t.14
		3: number, pos, t.13
	branch t.13, false, @if_2_end
		2: number, pos
	jump @if_2_then
		2: number, pos
	; successors=[@if_2_end, @if_2_then]

; block @if_2_then
	; predecessors=[@while_1]
		1: pos
	; 45 pc
	cast t.16(i64), pos(u8)
		2: pos, t.16
	cast t.17(u8*), t.16(i64)
		2: pos, t.17
	addrof t.15, [buffer]
		3: pos, t.15, t.17
	add t.15, t.15, t.17
		2: pos, t.15
	const t.20, 20
		3: pos, t.15, t.20
	move t.19, t.20
		3: pos, t.15, t.19
	sub t.19, t.19, pos
		2: t.15, t.19
	cast t.18(i64), t.19(u8)
		2: t.15, t.18
	call _, printStringLength [t.15, t.18]
	jump @printUint_ret
	; successors=[@printUint_ret]

; block @if_2_end
	; predecessors=[@while_1]
		2: number, pos
	; 1 pc
	jump @while_1
		2: number, pos
	; successors=[@while_1]

; block @printUint_ret
	; predecessors=[@if_2_then]
	; successors=[]


; CFG for function printIntLf
; block printIntLf
	; predecessors=[]
		1: number
	; 13 pc
	; 27:2 if number < 0
	const t.2, 0
		2: number, t.2
	lt t.1, number, t.2
		2: number, t.1
	branch t.1, false, @no_critical_edge_4
		1: number
	jump @if_3_then
		1: number
	; successors=[@no_critical_edge_4, @if_3_then]

; block @if_3_then
	; predecessors=[printIntLf]
		1: number
	; 11 pc
	const t.3, 45
		2: number, t.3
	call _, printChar [t.3]
		1: number
	neg number, number
		1: number
	jump @if_3_end
		1: number
	; successors=[@if_3_end]

; block @no_critical_edge_4
	; predecessors=[printIntLf]
		1: number
	; 1 pc
	jump @if_3_end
		1: number
	; successors=[@if_3_end]

; block @if_3_end
	; predecessors=[@no_critical_edge_4, @if_3_then]
		1: number
	; 9 pc
	call _, printUint [number]
	const t.4, 10
		1: t.4
	call _, printChar [t.4]
	jump @printIntLf_ret
	; successors=[@printIntLf_ret]

; block @printIntLf_ret
	; predecessors=[@if_3_end]
	; successors=[]


; CFG for function initRandom
; block initRandom
	; predecessors=[]
		1: salt
	; 6 pc
	move __random__, salt
	jump @initRandom_ret
	; successors=[@initRandom_ret]

; block @initRandom_ret
	; predecessors=[initRandom]
	; successors=[]


; CFG for function random
; block random
	; predecessors=[]
		1: __random__
	; 171 pc
	move r, __random__
		1: r
	const t.6, 524287
		2: r, t.6
	move t.5, r
		3: r, t.5, t.6
	and t.5, t.5, t.6
		2: r, t.5
	const t.7, 48271
		3: r, t.5, t.7
	move b, t.5
		3: b, r, t.7
	mul b, b, t.7
		2: b, r
	const t.9, 15
		3: b, r, t.9
	move t.8, r
		3: b, t.8, t.9
	shiftright t.8, t.8, t.9
		2: b, t.8
	const t.10, 48271
		3: b, t.10, t.8
	move c, t.8
		3: b, c, t.10
	mul c, c, t.10
		2: b, c
	const t.12, 65535
		3: b, c, t.12
	move t.11, c
		4: b, c, t.11, t.12
	and t.11, t.11, t.12
		3: b, c, t.11
	const t.13, 15
		4: b, c, t.11, t.13
	move d, t.11
		4: b, c, d, t.13
	shiftleft d, d, t.13
		3: b, c, d
	const t.16, 16
		4: b, c, d, t.16
	move t.15, c
		4: b, d, t.15, t.16
	shiftright t.15, t.15, t.16
		3: b, d, t.15
	move t.14, t.15
		3: b, d, t.14
	add t.14, t.14, b
		2: d, t.14
	move e, t.14
		2: d, e
	add e, e, d
		1: e
	const t.18, 2147483647
		2: e, t.18
	move t.17, e
		3: e, t.17, t.18
	and t.17, t.17, t.18
		2: e, t.17
	const t.20, 31
		3: e, t.17, t.20
	move t.19, e
		3: t.17, t.19, t.20
	shiftright t.19, t.19, t.20
		2: t.17, t.19
	move __random__, t.17
		2: __random__, t.19
	add __random__, __random__, t.19
		1: __random__
	; 127:9 return __random__
	ret __random__
	jump @random_ret
	; successors=[@random_ret]

; block @random_ret
	; predecessors=[random]
	; successors=[]


; CFG for function randomU8
; block randomU8
	; predecessors=[]
	; 12 pc
	; 131:10 return (u8)
	call t.1, random, []
		1: t.1
	cast t.0(u8), t.1(i32)
		1: t.0
	ret t.0
	jump @randomU8_ret
	; successors=[@randomU8_ret]

; block @randomU8_ret
	; predecessors=[randomU8]
	; successors=[]


; CFG for function main
; block main
	; predecessors=[]
	; 10 pc
	; begin initialize global variables
	const __random__, 0
	; end initialize global variables
	const t.2, 7439742
		1: t.2
	call _, initRandom [t.2]
	const i, 0
		1: i
	; 5:2 for i < 50
	jump @for_4
		1: i
	; successors=[@for_4]

; block @for_4
	; predecessors=[main, @for_4_body]
		1: i
	; 13 pc
	const t.4, 50
		2: i, t.4
	lt t.3, i, t.4
		2: i, t.3
	branch t.3, false, @for_4_break
		1: i
	jump @for_4_body
		1: i
	; successors=[@for_4_break, @for_4_body]

; block @for_4_body
	; predecessors=[@for_4]
		1: i
	; 21 pc
	call r, randomU8, []
		2: i, r
	cast t.5(i64), r(u8)
		2: i, t.5
	call _, printIntLf [t.5]
		1: i
	const t.6, 1
		2: i, t.6
	add i, i, t.6
		1: i
	jump @for_4
		1: i
	; successors=[@for_4]

; block @for_4_break
	; predecessors=[@for_4]
	; 1 pc
	jump @main_ret
	; successors=[@main_ret]

; block @main_ret
	; predecessors=[@for_4_break]
	; successors=[]


