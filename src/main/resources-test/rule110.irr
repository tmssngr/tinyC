@printString:
 Local variables
	arg 0: str (u8*/8)
	; 6 pc
	move r6, r1
	move r1, r6
	call r0, strlen, [r1]
	move r1, r6
	move r2, r0
	call _, printStringLength [r1, r2]

@printChar:
 Local variables
	arg 0: chr (u8/1)
	; 8 pc
	addrof r6, chr
	const r2, 1
	move chr, r1
	move r1, r6
	call _, printStringLength [r1, r2]

@strlen:
 Local variables
	arg 0: str (u8*/8)
	; 9 pc
	const r0, 0
	; 37:2 for *str != 0
	jump @for_1
@for_1_body:
	const r2, 1
	add r0, r0, r2
	cast r2(i64), r1(u8*)
	const r3, 1
	add r2, r2, r3
	cast r1(u8*), r2(i64)
@for_1:
	load r2, [r1]
	const r3, 0
	notequals r2, r2, r3
	branch r2, true, @for_1_body
	; 40:9 return length

@printBoard:
	; 18 pc
	const r1, 124
	call _, printChar [r1]
	const r6, 0
	; 11:2 for i < 30
	jump @for_2
@for_2_body:
	; 12:3 if [...] == 0
	cast r7(i64), r6(u8)
	cast r7(u8*), r7(i64)
	addrof r0, [board]
	add r0, r0, r7
	load r7, [r0]
	const r0, 0
	equals r7, r7, r0
	branch r7, true, @if_3_then
	const r1, 42
	call _, printChar [r1]
	jump @for_2_continue
@if_3_then:
	const r1, 32
	call _, printChar [r1]
@for_2_continue:
	const r7, 1
	add r6, r6, r7
@for_2:
	const r7, 30
	lt r7, r6, r7
	branch r7, true, @for_2_body
	const r1, [string-0]
	call _, printString [r1]

@main:
	; 60 pc
	; begin initialize global variables
	; end initialize global variables
	const r6, 0
	; 23:2 for i < 30
	jump @for_4
@for_4_body:
	const r7, 0
	cast r0(i64), r6(u8)
	cast r0(u8*), r0(i64)
	addrof r1, [board]
	add r1, r1, r0
	store [r1], r7
	const r7, 1
	add r6, r6, r7
@for_4:
	const r7, 30
	lt r7, r6, r7
	branch r7, true, @for_4_body
	const r6, 1
	const r7, 29
	cast r7(i64), r7(u8)
	cast r7(u8*), r7(i64)
	addrof r0, [board]
	add r0, r0, r7
	store [r0], r6
	call _, printBoard []
	const r6, 0
	; 30:2 for i < 28
	jump @for_5
@for_5_body:
	const r7, 0
	cast r7(u8*), r7(i64)
	addrof r0, [board]
	add r0, r0, r7
	load r7, [r0]
	const r1, 1
	shiftleft r7, r7, r1
	const r0, 1
	cast r0(u8*), r0(i64)
	addrof r2, [board]
	add r2, r2, r0
	load r0, [r2]
	or r7, r7, r0
	const r0, 1
	; 32:3 for j < 29
	jump @for_6
@for_6_body:
	const r1, 1
	move r2, r7
	shiftleft r2, r2, r1
	const r3, 7
	and r2, r2, r3
	const r3, 1
	move r4, r0
	add r4, r4, r3
	cast r3(i64), r4(u8)
	cast r3(u8*), r3(i64)
	addrof r4, [board]
	add r4, r4, r3
	load r3, [r4]
	move r7, r2
	or r7, r7, r3
	const r2, 110
	move r1, r7
	shiftright r2, r2, r1
	const r1, 1
	and r2, r2, r1
	cast r1(i64), r0(u8)
	cast r1(u8*), r1(i64)
	addrof r3, [board]
	add r3, r3, r1
	store [r3], r2
	const r1, 1
	add r0, r0, r1
@for_6:
	const r1, 29
	lt r1, r0, r1
	branch r1, true, @for_6_body
	call _, printBoard []
	const r0, 1
	add r6, r6, r0
@for_5:
	const r0, 28
	lt r0, r6, r0
	branch r0, true, @for_5_body

@printStringLength:
	mov     rdi, rsp
	
	mov     r8, rdx
	mov     rdx, rcx
	lea     rcx, [hStdOut]
	mov     rcx, [rcx]
	xor     r9, r9
	push    0
	sub     rsp, 20h
	  call    [WriteFile]
	mov     rsp, rdi
	ret

Global variables
	0: board[] (u8*/240)

String literals
	string lit 0 "|\n\0"
